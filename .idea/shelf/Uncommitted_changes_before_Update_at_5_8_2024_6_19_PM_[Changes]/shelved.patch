Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Black\">\r\n    <option name=\"sdkName\" value=\"Python 3.9 (languageLense)\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.9 (languageLense)\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 863070d9f660da7c76779c8caeb8dd704c8cfb56)
+++ b/.idea/misc.xml	(date 1715174098449)
@@ -3,5 +3,5 @@
   <component name="Black">
     <option name="sdkName" value="Python 3.9 (languageLense)" />
   </component>
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.9 (languageLense)" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.12" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"094c4da1-f913-4ead-956e-504ebdebe075\" name=\"Changes\" comment=\"finished the scraper that gets the words, and started on making the model.ipynb\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/model.ipynb\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/model.ipynb\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n        <option value=\"Jupyter Notebook\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2g9HwADAHy1BqC4AImrpKuMe5Fd\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Python.main.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"last_opened_file_path\": \"/Users/frederikalexanderbehrens/PycharmProjects/languageLense/data/Swedish\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"$PROJECT_DIR$/data/Swedish\" />\r\n      <recent name=\"$PROJECT_DIR$/data/Norwegian\" />\r\n      <recent name=\"$PROJECT_DIR$\" />\r\n      <recent name=\"$PROJECT_DIR$/data/Italian\" />\r\n      <recent name=\"$PROJECT_DIR$/data/Danish\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"languageLense\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-50da183f06c8-2887949eec09-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-233.13135.95\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"094c4da1-f913-4ead-956e-504ebdebe075\" name=\"Changes\" comment=\"\" />\r\n      <created>1715103109466</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1715103109466</updated>\r\n      <workItem from=\"1715103112886\" duration=\"552000\" />\r\n      <workItem from=\"1715103765254\" duration=\"18002000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"first commit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715103171708</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715103171708</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"first commit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715103241019</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715103241019</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"finished the scraper that gets the words, and started on making the model.ipynb\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715122448908</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715122448908</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"first commit\" />\r\n    <MESSAGE value=\"finished the scraper that gets the words, and started on making the model.ipynb\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"finished the scraper that gets the words, and started on making the model.ipynb\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/languageLense$main.coverage\" NAME=\"main Coverage Results\" MODIFIED=\"1715122050520\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 863070d9f660da7c76779c8caeb8dd704c8cfb56)
+++ b/.idea/workspace.xml	(date 1715185154056)
@@ -5,6 +5,7 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="094c4da1-f913-4ead-956e-504ebdebe075" name="Changes" comment="finished the scraper that gets the words, and started on making the model.ipynb">
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/model.ipynb" beforeDir="false" afterPath="$PROJECT_DIR$/model.ipynb" afterDir="false" />
     </list>
@@ -24,6 +25,18 @@
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
+  <component name="GitHubPullRequestSearchHistory">{
+  &quot;lastFilter&quot;: {
+    &quot;state&quot;: &quot;OPEN&quot;,
+    &quot;assignee&quot;: &quot;frederikbehr&quot;
+  }
+}</component>
+  <component name="GithubPullRequestsUISettings">{
+  &quot;selectedUrlAndAccountId&quot;: {
+    &quot;url&quot;: &quot;https://github.com/frederikbehr/bookScraper&quot;,
+    &quot;accountId&quot;: &quot;a1ceff9a-a22e-4d55-a18f-7f81ab8f7f44&quot;
+  }
+}</component>
   <component name="ProjectColorInfo">{
   &quot;associatedIndex&quot;: 2
 }</component>
@@ -36,6 +49,7 @@
   <component name="PropertiesComponent"><![CDATA[{
   "keyToString": {
     "Python.main.executor": "Run",
+    "Python.sentence.executor": "Run",
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "git-widget-placeholder": "master",
@@ -45,6 +59,7 @@
     "node.js.selected.package.eslint": "(autodetect)",
     "node.js.selected.package.tslint": "(autodetect)",
     "nodejs_package_manager_path": "npm",
+    "settings.editor.selected.configurable": "preferences.pluginManager",
     "vue.rearranger.settings.migration": "true"
   }
 }]]></component>
@@ -85,7 +100,8 @@
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
-        <option value="bundled-python-sdk-50da183f06c8-2887949eec09-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-233.13135.95" />
+        <option value="bundled-js-predefined-1d06a55b98c1-91d5c284f522-JavaScript-PY-241.15989.155" />
+        <option value="bundled-python-sdk-babbdf50b680-7c6932dee5e4-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-241.15989.155" />
       </set>
     </attachedChunks>
   </component>
@@ -99,6 +115,9 @@
       <updated>1715103109466</updated>
       <workItem from="1715103112886" duration="552000" />
       <workItem from="1715103765254" duration="18002000" />
+      <workItem from="1715173808593" duration="186000" />
+      <workItem from="1715174027315" duration="1229000" />
+      <workItem from="1715175283405" duration="3701000" />
     </task>
     <task id="LOCAL-00001" summary="first commit">
       <option name="closed" value="true" />
@@ -137,5 +156,7 @@
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
     <SUITE FILE_PATH="coverage/languageLense$main.coverage" NAME="main Coverage Results" MODIFIED="1715122050520" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+    <SUITE FILE_PATH="coverage/bookScraper$sentence.coverage" NAME="sentence Coverage Results" MODIFIED="1715181085655" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+    <SUITE FILE_PATH="coverage/bookScraper$main.coverage" NAME="main Coverage Results" MODIFIED="1715174462631" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
   </component>
 </project>
\ No newline at end of file
Index: model.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n \"cells\": [\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": 206,\r\n   \"id\": \"initial_id\",\r\n   \"metadata\": {\r\n    \"collapsed\": true,\r\n    \"ExecuteTime\": {\r\n     \"end_time\": \"2024-05-08T14:35:52.337762Z\",\r\n     \"start_time\": \"2024-05-08T14:35:52.311526Z\"\r\n    }\r\n   },\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"import numpy as np\\n\",\r\n    \"import pandas as pd\\n\",\r\n    \"import matplotlib.pyplot as plt\\n\",\r\n    \"import seaborn as sns\\n\",\r\n    \"import tensorflow as tf\\n\",\r\n    \"from tensorflow.keras.models import Sequential\\n\",\r\n    \"from tensorflow.keras.layers import Dense, Embedding, Conv1D, GlobalMaxPooling1D\\n\",\r\n    \"from tensorflow.keras import optimizers\\n\",\r\n    \"from tensorflow.keras.preprocessing.text import Tokenizer\\n\",\r\n    \"from keras.src.utils import pad_sequences\\n\",\r\n    \"from sklearn.model_selection import train_test_split\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"source\": [\r\n    \"# Get data\\n\",\r\n    \"Pandas is used to get the data from the project directory.\\n\",\r\n    \"The data is a .csv file, that has been created by book texts and prepared to be listed in the file word-by-word.\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false\r\n   },\r\n   \"id\": \"b20ed3afab281b03\"\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [\r\n    {\r\n     \"data\": {\r\n      \"text/plain\": \"                                                    Word Language\\n72269  gründler hufvudstupa rusade in i verkstaden oc...  Swedish\\n77723  lo consultaré y te informaré de qué sucedió ex...  Spanish\\n12942                    dumbledore led them in a few of  English\\n24075  page | 170 harry potter and the prisoner of az...  English\\n71984  en brännande rodnad sprang vid dessa fadrens o...  Swedish\",\r\n      \"text/html\": \"<div>\\n<style scoped>\\n    .dataframe tbody tr th:only-of-type {\\n        vertical-align: middle;\\n    }\\n\\n    .dataframe tbody tr th {\\n        vertical-align: top;\\n    }\\n\\n    .dataframe thead th {\\n        text-align: right;\\n    }\\n</style>\\n<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n  <thead>\\n    <tr style=\\\"text-align: right;\\\">\\n      <th></th>\\n      <th>Word</th>\\n      <th>Language</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th>72269</th>\\n      <td>gründler hufvudstupa rusade in i verkstaden oc...</td>\\n      <td>Swedish</td>\\n    </tr>\\n    <tr>\\n      <th>77723</th>\\n      <td>lo consultaré y te informaré de qué sucedió ex...</td>\\n      <td>Spanish</td>\\n    </tr>\\n    <tr>\\n      <th>12942</th>\\n      <td>dumbledore led them in a few of</td>\\n      <td>English</td>\\n    </tr>\\n    <tr>\\n      <th>24075</th>\\n      <td>page | 170 harry potter and the prisoner of az...</td>\\n      <td>English</td>\\n    </tr>\\n    <tr>\\n      <th>71984</th>\\n      <td>en brännande rodnad sprang vid dessa fadrens o...</td>\\n      <td>Swedish</td>\\n    </tr>\\n  </tbody>\\n</table>\\n</div>\"\r\n     },\r\n     \"execution_count\": 207,\r\n     \"metadata\": {},\r\n     \"output_type\": \"execute_result\"\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"df = pd.read_csv('dataset.csv')\\n\",\r\n    \"df = df.sample(frac=1.0, random_state=42)\\n\",\r\n    \"df.head()\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"ExecuteTime\": {\r\n     \"end_time\": \"2024-05-08T14:35:52.403248Z\",\r\n     \"start_time\": \"2024-05-08T14:35:52.329779Z\"\r\n    }\r\n   },\r\n   \"id\": \"9934f095638f49f4\",\r\n   \"execution_count\": 207\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"source\": [\r\n    \"# Prepare data\\n\",\r\n    \"Divide the data into X and y. X is input and y is the desired output.\\n\",\r\n    \"One-Hot Encode it, so the language is categorical. This is done with Pandas.\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false\r\n   },\r\n   \"id\": \"e375f9241e794ae4\"\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"Rows: 82662\\n\",\r\n      \"Amount of languages to identify: 7\\n\"\r\n     ]\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"# Getting X - the input values\\n\",\r\n    \"X = df.iloc[:, :-1]\\n\",\r\n    \"X.loc[:, 'Word'] = X['Word'].astype(str)\\n\",\r\n    \"tokenizer = Tokenizer(char_level=True) # Used for turning the words into numbers\\n\",\r\n    \"tokenizer.fit_on_texts(X['Word'].tolist()) # Giving Tokenizer the data it needs to learn how to encode the words\\n\",\r\n    \"X_sequences = tokenizer.texts_to_sequences(X['Word'].tolist()) # Now the words are encoded into sequences\\n\",\r\n    \"input_dim = max(len(seq) for seq in X_sequences)\\n\",\r\n    \"X = pad_sequences(\\n\",\r\n    \"    X_sequences, \\n\",\r\n    \"    maxlen=input_dim, \\n\",\r\n    \"    padding='post'\\n\",\r\n    \") # Making all input values be of same length\\n\",\r\n    \"print(f\\\"Rows: {len(X)}\\\")\\n\",\r\n    \"\\n\",\r\n    \"# Getting y - the output values\\n\",\r\n    \"y = df.iloc[:, -1:]\\n\",\r\n    \"y = pd.get_dummies(y).values\\n\",\r\n    \"print(f\\\"Amount of languages to identify: {len(y[1])}\\\")\\n\",\r\n    \"\\n\",\r\n    \"X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)\\n\",\r\n    \"X_train = X_train.reshape(X_train.shape[0], X_train.shape[1], 1)\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"ExecuteTime\": {\r\n     \"end_time\": \"2024-05-08T14:35:53.629943Z\",\r\n     \"start_time\": \"2024-05-08T14:35:52.406326Z\"\r\n    }\r\n   },\r\n   \"id\": \"ba4d86402045de27\",\r\n   \"execution_count\": 208\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"model = Sequential()\\n\",\r\n    \"model.add(Conv1D(128, 5, activation='relu'))  # Convolutional layer\\n\",\r\n    \"model.add(GlobalMaxPooling1D())  # Pooling layer\\n\",\r\n    \"model.add(Dense(64, activation='relu'))  # Dense layer\\n\",\r\n    \"model.add(Dense(32, activation='relu'))  # Dense layer\\n\",\r\n    \"model.add(Dense(32, activation='relu'))  # Dense layer\\n\",\r\n    \"model.add(Dense(len(y[1]), activation='softmax'))\\n\",\r\n    \"adam = optimizers.Adam(learning_rate=0.005)\\n\",\r\n    \"model.compile(loss='categorical_crossentropy', optimizer=adam, metrics=['accuracy', 'categorical_crossentropy'])\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"ExecuteTime\": {\r\n     \"end_time\": \"2024-05-08T14:40:42.820317Z\",\r\n     \"start_time\": \"2024-05-08T14:40:42.793493Z\"\r\n    }\r\n   },\r\n   \"id\": \"c870f2fa48fe956c\",\r\n   \"execution_count\": 211\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [\r\n    {\r\n     \"name\": \"stdout\",\r\n     \"output_type\": \"stream\",\r\n     \"text\": [\r\n      \"Epoch 1/256\\n\",\r\n      \"\\u001B[1m67/67\\u001B[0m \\u001B[32m━━━━━━━━━━━━━━━━━━━━\\u001B[0m\\u001B[37m\\u001B[0m \\u001B[1m12s\\u001B[0m 165ms/step - accuracy: 0.4831 - categorical_crossentropy: 1.6431 - loss: 1.6431 - val_accuracy: 0.5701 - val_categorical_crossentropy: 1.3130 - val_loss: 1.3130\\n\",\r\n      \"Epoch 2/256\\n\",\r\n      \"\\u001B[1m67/67\\u001B[0m \\u001B[32m━━━━━━━━━━━━━━━━━━━━\\u001B[0m\\u001B[37m\\u001B[0m \\u001B[1m11s\\u001B[0m 163ms/step - accuracy: 0.6127 - categorical_crossentropy: 1.2084 - loss: 1.2084 - val_accuracy: 0.6505 - val_categorical_crossentropy: 1.1035 - val_loss: 1.1035\\n\",\r\n      \"Epoch 3/256\\n\",\r\n      \"\\u001B[1m67/67\\u001B[0m \\u001B[32m━━━━━━━━━━━━━━━━━━━━\\u001B[0m\\u001B[37m\\u001B[0m \\u001B[1m11s\\u001B[0m 166ms/step - accuracy: 0.6542 - categorical_crossentropy: 1.0946 - loss: 1.0946 - val_accuracy: 0.6634 - val_categorical_crossentropy: 1.0601 - val_loss: 1.0601\\n\",\r\n      \"Epoch 4/256\\n\",\r\n      \"\\u001B[1m34/67\\u001B[0m \\u001B[32m━━━━━━━━━━\\u001B[0m\\u001B[37m━━━━━━━━━━\\u001B[0m \\u001B[1m5s\\u001B[0m 160ms/step - accuracy: 0.6718 - categorical_crossentropy: 1.0355 - loss: 1.0355\"\r\n     ]\r\n    },\r\n    {\r\n     \"ename\": \"KeyboardInterrupt\",\r\n     \"evalue\": \"\",\r\n     \"output_type\": \"error\",\r\n     \"traceback\": [\r\n      \"\\u001B[0;31m---------------------------------------------------------------------------\\u001B[0m\",\r\n      \"\\u001B[0;31mKeyboardInterrupt\\u001B[0m                         Traceback (most recent call last)\",\r\n      \"Cell \\u001B[0;32mIn[212], line 1\\u001B[0m\\n\\u001B[0;32m----> 1\\u001B[0m history \\u001B[38;5;241m=\\u001B[39m \\u001B[43mmodel\\u001B[49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43mfit\\u001B[49m\\u001B[43m(\\u001B[49m\\u001B[43mX_train\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43my_train\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mvalidation_data\\u001B[49m\\u001B[38;5;241;43m=\\u001B[39;49m\\u001B[43m(\\u001B[49m\\u001B[43mX_val\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43my_val\\u001B[49m\\u001B[43m)\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mepochs\\u001B[49m\\u001B[38;5;241;43m=\\u001B[39;49m\\u001B[38;5;241;43m256\\u001B[39;49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mbatch_size\\u001B[49m\\u001B[38;5;241;43m=\\u001B[39;49m\\u001B[38;5;241;43m1000\\u001B[39;49m\\u001B[43m,\\u001B[49m\\u001B[43mverbose\\u001B[49m\\u001B[38;5;241;43m=\\u001B[39;49m\\u001B[38;5;241;43m1\\u001B[39;49m\\u001B[43m)\\u001B[49m\\n\",\r\n      \"File \\u001B[0;32m~/PycharmProjects/languageLense/.venv/lib/python3.9/site-packages/keras/src/utils/traceback_utils.py:117\\u001B[0m, in \\u001B[0;36mfilter_traceback.<locals>.error_handler\\u001B[0;34m(*args, **kwargs)\\u001B[0m\\n\\u001B[1;32m    115\\u001B[0m filtered_tb \\u001B[38;5;241m=\\u001B[39m \\u001B[38;5;28;01mNone\\u001B[39;00m\\n\\u001B[1;32m    116\\u001B[0m \\u001B[38;5;28;01mtry\\u001B[39;00m:\\n\\u001B[0;32m--> 117\\u001B[0m     \\u001B[38;5;28;01mreturn\\u001B[39;00m \\u001B[43mfn\\u001B[49m\\u001B[43m(\\u001B[49m\\u001B[38;5;241;43m*\\u001B[39;49m\\u001B[43margs\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[38;5;241;43m*\\u001B[39;49m\\u001B[38;5;241;43m*\\u001B[39;49m\\u001B[43mkwargs\\u001B[49m\\u001B[43m)\\u001B[49m\\n\\u001B[1;32m    118\\u001B[0m \\u001B[38;5;28;01mexcept\\u001B[39;00m \\u001B[38;5;167;01mException\\u001B[39;00m \\u001B[38;5;28;01mas\\u001B[39;00m e:\\n\\u001B[1;32m    119\\u001B[0m     filtered_tb \\u001B[38;5;241m=\\u001B[39m _process_traceback_frames(e\\u001B[38;5;241m.\\u001B[39m__traceback__)\\n\",\r\n      \"File \\u001B[0;32m~/PycharmProjects/languageLense/.venv/lib/python3.9/site-packages/keras/src/backend/tensorflow/trainer.py:314\\u001B[0m, in \\u001B[0;36mTensorFlowTrainer.fit\\u001B[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq)\\u001B[0m\\n\\u001B[1;32m    312\\u001B[0m \\u001B[38;5;28;01mfor\\u001B[39;00m step, iterator \\u001B[38;5;129;01min\\u001B[39;00m epoch_iterator\\u001B[38;5;241m.\\u001B[39menumerate_epoch():\\n\\u001B[1;32m    313\\u001B[0m     callbacks\\u001B[38;5;241m.\\u001B[39mon_train_batch_begin(step)\\n\\u001B[0;32m--> 314\\u001B[0m     logs \\u001B[38;5;241m=\\u001B[39m \\u001B[38;5;28;43mself\\u001B[39;49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43mtrain_function\\u001B[49m\\u001B[43m(\\u001B[49m\\u001B[43miterator\\u001B[49m\\u001B[43m)\\u001B[49m\\n\\u001B[1;32m    315\\u001B[0m     logs \\u001B[38;5;241m=\\u001B[39m \\u001B[38;5;28mself\\u001B[39m\\u001B[38;5;241m.\\u001B[39m_pythonify_logs(logs)\\n\\u001B[1;32m    316\\u001B[0m     callbacks\\u001B[38;5;241m.\\u001B[39mon_train_batch_end(step, logs)\\n\",\r\n      \"File \\u001B[0;32m~/PycharmProjects/languageLense/.venv/lib/python3.9/site-packages/tensorflow/python/util/traceback_utils.py:150\\u001B[0m, in \\u001B[0;36mfilter_traceback.<locals>.error_handler\\u001B[0;34m(*args, **kwargs)\\u001B[0m\\n\\u001B[1;32m    148\\u001B[0m filtered_tb \\u001B[38;5;241m=\\u001B[39m \\u001B[38;5;28;01mNone\\u001B[39;00m\\n\\u001B[1;32m    149\\u001B[0m \\u001B[38;5;28;01mtry\\u001B[39;00m:\\n\\u001B[0;32m--> 150\\u001B[0m   \\u001B[38;5;28;01mreturn\\u001B[39;00m \\u001B[43mfn\\u001B[49m\\u001B[43m(\\u001B[49m\\u001B[38;5;241;43m*\\u001B[39;49m\\u001B[43margs\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[38;5;241;43m*\\u001B[39;49m\\u001B[38;5;241;43m*\\u001B[39;49m\\u001B[43mkwargs\\u001B[49m\\u001B[43m)\\u001B[49m\\n\\u001B[1;32m    151\\u001B[0m \\u001B[38;5;28;01mexcept\\u001B[39;00m \\u001B[38;5;167;01mException\\u001B[39;00m \\u001B[38;5;28;01mas\\u001B[39;00m e:\\n\\u001B[1;32m    152\\u001B[0m   filtered_tb \\u001B[38;5;241m=\\u001B[39m _process_traceback_frames(e\\u001B[38;5;241m.\\u001B[39m__traceback__)\\n\",\r\n      \"File \\u001B[0;32m~/PycharmProjects/languageLense/.venv/lib/python3.9/site-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py:833\\u001B[0m, in \\u001B[0;36mFunction.__call__\\u001B[0;34m(self, *args, **kwds)\\u001B[0m\\n\\u001B[1;32m    830\\u001B[0m compiler \\u001B[38;5;241m=\\u001B[39m \\u001B[38;5;124m\\\"\\u001B[39m\\u001B[38;5;124mxla\\u001B[39m\\u001B[38;5;124m\\\"\\u001B[39m \\u001B[38;5;28;01mif\\u001B[39;00m \\u001B[38;5;28mself\\u001B[39m\\u001B[38;5;241m.\\u001B[39m_jit_compile \\u001B[38;5;28;01melse\\u001B[39;00m \\u001B[38;5;124m\\\"\\u001B[39m\\u001B[38;5;124mnonXla\\u001B[39m\\u001B[38;5;124m\\\"\\u001B[39m\\n\\u001B[1;32m    832\\u001B[0m \\u001B[38;5;28;01mwith\\u001B[39;00m OptionalXlaContext(\\u001B[38;5;28mself\\u001B[39m\\u001B[38;5;241m.\\u001B[39m_jit_compile):\\n\\u001B[0;32m--> 833\\u001B[0m   result \\u001B[38;5;241m=\\u001B[39m \\u001B[38;5;28;43mself\\u001B[39;49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43m_call\\u001B[49m\\u001B[43m(\\u001B[49m\\u001B[38;5;241;43m*\\u001B[39;49m\\u001B[43margs\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[38;5;241;43m*\\u001B[39;49m\\u001B[38;5;241;43m*\\u001B[39;49m\\u001B[43mkwds\\u001B[49m\\u001B[43m)\\u001B[49m\\n\\u001B[1;32m    835\\u001B[0m new_tracing_count \\u001B[38;5;241m=\\u001B[39m \\u001B[38;5;28mself\\u001B[39m\\u001B[38;5;241m.\\u001B[39mexperimental_get_tracing_count()\\n\\u001B[1;32m    836\\u001B[0m without_tracing \\u001B[38;5;241m=\\u001B[39m (tracing_count \\u001B[38;5;241m==\\u001B[39m new_tracing_count)\\n\",\r\n      \"File \\u001B[0;32m~/PycharmProjects/languageLense/.venv/lib/python3.9/site-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py:878\\u001B[0m, in \\u001B[0;36mFunction._call\\u001B[0;34m(self, *args, **kwds)\\u001B[0m\\n\\u001B[1;32m    875\\u001B[0m \\u001B[38;5;28mself\\u001B[39m\\u001B[38;5;241m.\\u001B[39m_lock\\u001B[38;5;241m.\\u001B[39mrelease()\\n\\u001B[1;32m    876\\u001B[0m \\u001B[38;5;66;03m# In this case we have not created variables on the first call. So we can\\u001B[39;00m\\n\\u001B[1;32m    877\\u001B[0m \\u001B[38;5;66;03m# run the first trace but we should fail if variables are created.\\u001B[39;00m\\n\\u001B[0;32m--> 878\\u001B[0m results \\u001B[38;5;241m=\\u001B[39m \\u001B[43mtracing_compilation\\u001B[49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43mcall_function\\u001B[49m\\u001B[43m(\\u001B[49m\\n\\u001B[1;32m    879\\u001B[0m \\u001B[43m    \\u001B[49m\\u001B[43margs\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mkwds\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[38;5;28;43mself\\u001B[39;49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43m_variable_creation_config\\u001B[49m\\n\\u001B[1;32m    880\\u001B[0m \\u001B[43m\\u001B[49m\\u001B[43m)\\u001B[49m\\n\\u001B[1;32m    881\\u001B[0m \\u001B[38;5;28;01mif\\u001B[39;00m \\u001B[38;5;28mself\\u001B[39m\\u001B[38;5;241m.\\u001B[39m_created_variables:\\n\\u001B[1;32m    882\\u001B[0m   \\u001B[38;5;28;01mraise\\u001B[39;00m \\u001B[38;5;167;01mValueError\\u001B[39;00m(\\u001B[38;5;124m\\\"\\u001B[39m\\u001B[38;5;124mCreating variables on a non-first call to a function\\u001B[39m\\u001B[38;5;124m\\\"\\u001B[39m\\n\\u001B[1;32m    883\\u001B[0m                    \\u001B[38;5;124m\\\"\\u001B[39m\\u001B[38;5;124m decorated with tf.function.\\u001B[39m\\u001B[38;5;124m\\\"\\u001B[39m)\\n\",\r\n      \"File \\u001B[0;32m~/PycharmProjects/languageLense/.venv/lib/python3.9/site-packages/tensorflow/python/eager/polymorphic_function/tracing_compilation.py:139\\u001B[0m, in \\u001B[0;36mcall_function\\u001B[0;34m(args, kwargs, tracing_options)\\u001B[0m\\n\\u001B[1;32m    137\\u001B[0m bound_args \\u001B[38;5;241m=\\u001B[39m function\\u001B[38;5;241m.\\u001B[39mfunction_type\\u001B[38;5;241m.\\u001B[39mbind(\\u001B[38;5;241m*\\u001B[39margs, \\u001B[38;5;241m*\\u001B[39m\\u001B[38;5;241m*\\u001B[39mkwargs)\\n\\u001B[1;32m    138\\u001B[0m flat_inputs \\u001B[38;5;241m=\\u001B[39m function\\u001B[38;5;241m.\\u001B[39mfunction_type\\u001B[38;5;241m.\\u001B[39munpack_inputs(bound_args)\\n\\u001B[0;32m--> 139\\u001B[0m \\u001B[38;5;28;01mreturn\\u001B[39;00m \\u001B[43mfunction\\u001B[49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43m_call_flat\\u001B[49m\\u001B[43m(\\u001B[49m\\u001B[43m  \\u001B[49m\\u001B[38;5;66;43;03m# pylint: disable=protected-access\\u001B[39;49;00m\\n\\u001B[1;32m    140\\u001B[0m \\u001B[43m    \\u001B[49m\\u001B[43mflat_inputs\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mcaptured_inputs\\u001B[49m\\u001B[38;5;241;43m=\\u001B[39;49m\\u001B[43mfunction\\u001B[49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43mcaptured_inputs\\u001B[49m\\n\\u001B[1;32m    141\\u001B[0m \\u001B[43m\\u001B[49m\\u001B[43m)\\u001B[49m\\n\",\r\n      \"File \\u001B[0;32m~/PycharmProjects/languageLense/.venv/lib/python3.9/site-packages/tensorflow/python/eager/polymorphic_function/concrete_function.py:1322\\u001B[0m, in \\u001B[0;36mConcreteFunction._call_flat\\u001B[0;34m(self, tensor_inputs, captured_inputs)\\u001B[0m\\n\\u001B[1;32m   1318\\u001B[0m possible_gradient_type \\u001B[38;5;241m=\\u001B[39m gradients_util\\u001B[38;5;241m.\\u001B[39mPossibleTapeGradientTypes(args)\\n\\u001B[1;32m   1319\\u001B[0m \\u001B[38;5;28;01mif\\u001B[39;00m (possible_gradient_type \\u001B[38;5;241m==\\u001B[39m gradients_util\\u001B[38;5;241m.\\u001B[39mPOSSIBLE_GRADIENT_TYPES_NONE\\n\\u001B[1;32m   1320\\u001B[0m     \\u001B[38;5;129;01mand\\u001B[39;00m executing_eagerly):\\n\\u001B[1;32m   1321\\u001B[0m   \\u001B[38;5;66;03m# No tape is watching; skip to running the function.\\u001B[39;00m\\n\\u001B[0;32m-> 1322\\u001B[0m   \\u001B[38;5;28;01mreturn\\u001B[39;00m \\u001B[38;5;28;43mself\\u001B[39;49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43m_inference_function\\u001B[49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43mcall_preflattened\\u001B[49m\\u001B[43m(\\u001B[49m\\u001B[43margs\\u001B[49m\\u001B[43m)\\u001B[49m\\n\\u001B[1;32m   1323\\u001B[0m forward_backward \\u001B[38;5;241m=\\u001B[39m \\u001B[38;5;28mself\\u001B[39m\\u001B[38;5;241m.\\u001B[39m_select_forward_and_backward_functions(\\n\\u001B[1;32m   1324\\u001B[0m     args,\\n\\u001B[1;32m   1325\\u001B[0m     possible_gradient_type,\\n\\u001B[1;32m   1326\\u001B[0m     executing_eagerly)\\n\\u001B[1;32m   1327\\u001B[0m forward_function, args_with_tangents \\u001B[38;5;241m=\\u001B[39m forward_backward\\u001B[38;5;241m.\\u001B[39mforward()\\n\",\r\n      \"File \\u001B[0;32m~/PycharmProjects/languageLense/.venv/lib/python3.9/site-packages/tensorflow/python/eager/polymorphic_function/atomic_function.py:216\\u001B[0m, in \\u001B[0;36mAtomicFunction.call_preflattened\\u001B[0;34m(self, args)\\u001B[0m\\n\\u001B[1;32m    214\\u001B[0m \\u001B[38;5;28;01mdef\\u001B[39;00m \\u001B[38;5;21mcall_preflattened\\u001B[39m(\\u001B[38;5;28mself\\u001B[39m, args: Sequence[core\\u001B[38;5;241m.\\u001B[39mTensor]) \\u001B[38;5;241m-\\u001B[39m\\u001B[38;5;241m>\\u001B[39m Any:\\n\\u001B[1;32m    215\\u001B[0m \\u001B[38;5;250m  \\u001B[39m\\u001B[38;5;124;03m\\\"\\\"\\\"Calls with flattened tensor inputs and returns the structured output.\\\"\\\"\\\"\\u001B[39;00m\\n\\u001B[0;32m--> 216\\u001B[0m   flat_outputs \\u001B[38;5;241m=\\u001B[39m \\u001B[38;5;28;43mself\\u001B[39;49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43mcall_flat\\u001B[49m\\u001B[43m(\\u001B[49m\\u001B[38;5;241;43m*\\u001B[39;49m\\u001B[43margs\\u001B[49m\\u001B[43m)\\u001B[49m\\n\\u001B[1;32m    217\\u001B[0m   \\u001B[38;5;28;01mreturn\\u001B[39;00m \\u001B[38;5;28mself\\u001B[39m\\u001B[38;5;241m.\\u001B[39mfunction_type\\u001B[38;5;241m.\\u001B[39mpack_output(flat_outputs)\\n\",\r\n      \"File \\u001B[0;32m~/PycharmProjects/languageLense/.venv/lib/python3.9/site-packages/tensorflow/python/eager/polymorphic_function/atomic_function.py:251\\u001B[0m, in \\u001B[0;36mAtomicFunction.call_flat\\u001B[0;34m(self, *args)\\u001B[0m\\n\\u001B[1;32m    249\\u001B[0m \\u001B[38;5;28;01mwith\\u001B[39;00m record\\u001B[38;5;241m.\\u001B[39mstop_recording():\\n\\u001B[1;32m    250\\u001B[0m   \\u001B[38;5;28;01mif\\u001B[39;00m \\u001B[38;5;28mself\\u001B[39m\\u001B[38;5;241m.\\u001B[39m_bound_context\\u001B[38;5;241m.\\u001B[39mexecuting_eagerly():\\n\\u001B[0;32m--> 251\\u001B[0m     outputs \\u001B[38;5;241m=\\u001B[39m \\u001B[38;5;28;43mself\\u001B[39;49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43m_bound_context\\u001B[49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43mcall_function\\u001B[49m\\u001B[43m(\\u001B[49m\\n\\u001B[1;32m    252\\u001B[0m \\u001B[43m        \\u001B[49m\\u001B[38;5;28;43mself\\u001B[39;49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43mname\\u001B[49m\\u001B[43m,\\u001B[49m\\n\\u001B[1;32m    253\\u001B[0m \\u001B[43m        \\u001B[49m\\u001B[38;5;28;43mlist\\u001B[39;49m\\u001B[43m(\\u001B[49m\\u001B[43margs\\u001B[49m\\u001B[43m)\\u001B[49m\\u001B[43m,\\u001B[49m\\n\\u001B[1;32m    254\\u001B[0m \\u001B[43m        \\u001B[49m\\u001B[38;5;28;43mlen\\u001B[39;49m\\u001B[43m(\\u001B[49m\\u001B[38;5;28;43mself\\u001B[39;49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43mfunction_type\\u001B[49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43mflat_outputs\\u001B[49m\\u001B[43m)\\u001B[49m\\u001B[43m,\\u001B[49m\\n\\u001B[1;32m    255\\u001B[0m \\u001B[43m    \\u001B[49m\\u001B[43m)\\u001B[49m\\n\\u001B[1;32m    256\\u001B[0m   \\u001B[38;5;28;01melse\\u001B[39;00m:\\n\\u001B[1;32m    257\\u001B[0m     outputs \\u001B[38;5;241m=\\u001B[39m make_call_op_in_graph(\\n\\u001B[1;32m    258\\u001B[0m         \\u001B[38;5;28mself\\u001B[39m,\\n\\u001B[1;32m    259\\u001B[0m         \\u001B[38;5;28mlist\\u001B[39m(args),\\n\\u001B[1;32m    260\\u001B[0m         \\u001B[38;5;28mself\\u001B[39m\\u001B[38;5;241m.\\u001B[39m_bound_context\\u001B[38;5;241m.\\u001B[39mfunction_call_options\\u001B[38;5;241m.\\u001B[39mas_attrs(),\\n\\u001B[1;32m    261\\u001B[0m     )\\n\",\r\n      \"File \\u001B[0;32m~/PycharmProjects/languageLense/.venv/lib/python3.9/site-packages/tensorflow/python/eager/context.py:1500\\u001B[0m, in \\u001B[0;36mContext.call_function\\u001B[0;34m(self, name, tensor_inputs, num_outputs)\\u001B[0m\\n\\u001B[1;32m   1498\\u001B[0m cancellation_context \\u001B[38;5;241m=\\u001B[39m cancellation\\u001B[38;5;241m.\\u001B[39mcontext()\\n\\u001B[1;32m   1499\\u001B[0m \\u001B[38;5;28;01mif\\u001B[39;00m cancellation_context \\u001B[38;5;129;01mis\\u001B[39;00m \\u001B[38;5;28;01mNone\\u001B[39;00m:\\n\\u001B[0;32m-> 1500\\u001B[0m   outputs \\u001B[38;5;241m=\\u001B[39m \\u001B[43mexecute\\u001B[49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43mexecute\\u001B[49m\\u001B[43m(\\u001B[49m\\n\\u001B[1;32m   1501\\u001B[0m \\u001B[43m      \\u001B[49m\\u001B[43mname\\u001B[49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43mdecode\\u001B[49m\\u001B[43m(\\u001B[49m\\u001B[38;5;124;43m\\\"\\u001B[39;49m\\u001B[38;5;124;43mutf-8\\u001B[39;49m\\u001B[38;5;124;43m\\\"\\u001B[39;49m\\u001B[43m)\\u001B[49m\\u001B[43m,\\u001B[49m\\n\\u001B[1;32m   1502\\u001B[0m \\u001B[43m      \\u001B[49m\\u001B[43mnum_outputs\\u001B[49m\\u001B[38;5;241;43m=\\u001B[39;49m\\u001B[43mnum_outputs\\u001B[49m\\u001B[43m,\\u001B[49m\\n\\u001B[1;32m   1503\\u001B[0m \\u001B[43m      \\u001B[49m\\u001B[43minputs\\u001B[49m\\u001B[38;5;241;43m=\\u001B[39;49m\\u001B[43mtensor_inputs\\u001B[49m\\u001B[43m,\\u001B[49m\\n\\u001B[1;32m   1504\\u001B[0m \\u001B[43m      \\u001B[49m\\u001B[43mattrs\\u001B[49m\\u001B[38;5;241;43m=\\u001B[39;49m\\u001B[43mattrs\\u001B[49m\\u001B[43m,\\u001B[49m\\n\\u001B[1;32m   1505\\u001B[0m \\u001B[43m      \\u001B[49m\\u001B[43mctx\\u001B[49m\\u001B[38;5;241;43m=\\u001B[39;49m\\u001B[38;5;28;43mself\\u001B[39;49m\\u001B[43m,\\u001B[49m\\n\\u001B[1;32m   1506\\u001B[0m \\u001B[43m  \\u001B[49m\\u001B[43m)\\u001B[49m\\n\\u001B[1;32m   1507\\u001B[0m \\u001B[38;5;28;01melse\\u001B[39;00m:\\n\\u001B[1;32m   1508\\u001B[0m   outputs \\u001B[38;5;241m=\\u001B[39m execute\\u001B[38;5;241m.\\u001B[39mexecute_with_cancellation(\\n\\u001B[1;32m   1509\\u001B[0m       name\\u001B[38;5;241m.\\u001B[39mdecode(\\u001B[38;5;124m\\\"\\u001B[39m\\u001B[38;5;124mutf-8\\u001B[39m\\u001B[38;5;124m\\\"\\u001B[39m),\\n\\u001B[1;32m   1510\\u001B[0m       num_outputs\\u001B[38;5;241m=\\u001B[39mnum_outputs,\\n\\u001B[0;32m   (...)\\u001B[0m\\n\\u001B[1;32m   1514\\u001B[0m       cancellation_manager\\u001B[38;5;241m=\\u001B[39mcancellation_context,\\n\\u001B[1;32m   1515\\u001B[0m   )\\n\",\r\n      \"File \\u001B[0;32m~/PycharmProjects/languageLense/.venv/lib/python3.9/site-packages/tensorflow/python/eager/execute.py:53\\u001B[0m, in \\u001B[0;36mquick_execute\\u001B[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\\u001B[0m\\n\\u001B[1;32m     51\\u001B[0m \\u001B[38;5;28;01mtry\\u001B[39;00m:\\n\\u001B[1;32m     52\\u001B[0m   ctx\\u001B[38;5;241m.\\u001B[39mensure_initialized()\\n\\u001B[0;32m---> 53\\u001B[0m   tensors \\u001B[38;5;241m=\\u001B[39m \\u001B[43mpywrap_tfe\\u001B[49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43mTFE_Py_Execute\\u001B[49m\\u001B[43m(\\u001B[49m\\u001B[43mctx\\u001B[49m\\u001B[38;5;241;43m.\\u001B[39;49m\\u001B[43m_handle\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mdevice_name\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mop_name\\u001B[49m\\u001B[43m,\\u001B[49m\\n\\u001B[1;32m     54\\u001B[0m \\u001B[43m                                      \\u001B[49m\\u001B[43minputs\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mattrs\\u001B[49m\\u001B[43m,\\u001B[49m\\u001B[43m \\u001B[49m\\u001B[43mnum_outputs\\u001B[49m\\u001B[43m)\\u001B[49m\\n\\u001B[1;32m     55\\u001B[0m \\u001B[38;5;28;01mexcept\\u001B[39;00m core\\u001B[38;5;241m.\\u001B[39m_NotOkStatusException \\u001B[38;5;28;01mas\\u001B[39;00m e:\\n\\u001B[1;32m     56\\u001B[0m   \\u001B[38;5;28;01mif\\u001B[39;00m name \\u001B[38;5;129;01mis\\u001B[39;00m \\u001B[38;5;129;01mnot\\u001B[39;00m \\u001B[38;5;28;01mNone\\u001B[39;00m:\\n\",\r\n      \"\\u001B[0;31mKeyboardInterrupt\\u001B[0m: \"\r\n     ]\r\n    }\r\n   ],\r\n   \"source\": [\r\n    \"history = model.fit(X_train, y_train, validation_data=(X_val, y_val), epochs=256, batch_size=1000,verbose=1)\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"ExecuteTime\": {\r\n     \"end_time\": \"2024-05-08T14:41:26.487594Z\",\r\n     \"start_time\": \"2024-05-08T14:40:46.669964Z\"\r\n    }\r\n   },\r\n   \"id\": \"d9a29cb1ff2dcba7\",\r\n   \"execution_count\": 212\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"%matplotlib inline\\n\",\r\n    \"plt.plot(history.history['loss'])\\n\",\r\n    \"plt.plot(history.history['val_loss'])\\n\",\r\n    \"plt.title(\\\"Model's MSE\\\")\\n\",\r\n    \"plt.legend(['Train', 'Val'], loc='upper right')\\n\",\r\n    \"plt.ylabel('MSE')\\n\",\r\n    \"plt.xlabel('Epoch')\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"ExecuteTime\": {\r\n     \"end_time\": \"2024-05-08T14:36:37.751023Z\",\r\n     \"start_time\": \"2024-05-08T14:36:37.750399Z\"\r\n    }\r\n   },\r\n   \"id\": \"db97a7f3cc91e456\",\r\n   \"execution_count\": null\r\n  },\r\n  {\r\n   \"cell_type\": \"markdown\",\r\n   \"source\": [\r\n    \"# Prediction\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false\r\n   },\r\n   \"id\": \"4fb3930ce2fec85d\"\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"prediction_word = \\\"español\\\"\\n\",\r\n    \"prediction_word = tokenizer.texts_to_sequences([prediction_word])\\n\",\r\n    \"prediction_word = pad_sequences(prediction_word, maxlen=input_dim)\\n\",\r\n    \"prediction = model.predict([prediction_word])\\n\",\r\n    \"output_probabilities = np.array(prediction)\\n\",\r\n    \"\\n\",\r\n    \"result = []\\n\",\r\n    \"class_labels = df.iloc[:, -1].unique()\\n\",\r\n    \"for index, prediction in enumerate(output_probabilities[0]):\\n\",\r\n    \"    result.append(f\\\"{class_labels[index]} - {round(prediction*100, 1)}%\\\")\\n\",\r\n    \"\\n\",\r\n    \"for r in result:\\n\",\r\n    \"    print(r)\\n\"\r\n   ],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"ExecuteTime\": {\r\n     \"end_time\": \"2024-05-08T14:36:37.754197Z\",\r\n     \"start_time\": \"2024-05-08T14:36:37.752219Z\"\r\n    }\r\n   },\r\n   \"id\": \"2af1ef5d86413ee6\",\r\n   \"execution_count\": null\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"outputs\": [],\r\n   \"source\": [],\r\n   \"metadata\": {\r\n    \"collapsed\": false,\r\n    \"ExecuteTime\": {\r\n     \"start_time\": \"2024-05-08T14:36:37.753803Z\"\r\n    }\r\n   },\r\n   \"id\": \"f103d5e7cc3146d9\",\r\n   \"execution_count\": null\r\n  }\r\n ],\r\n \"metadata\": {\r\n  \"kernelspec\": {\r\n   \"display_name\": \"Python 3\",\r\n   \"language\": \"python\",\r\n   \"name\": \"python3\"\r\n  },\r\n  \"language_info\": {\r\n   \"codemirror_mode\": {\r\n    \"name\": \"ipython\",\r\n    \"version\": 2\r\n   },\r\n   \"file_extension\": \".py\",\r\n   \"mimetype\": \"text/x-python\",\r\n   \"name\": \"python\",\r\n   \"nbconvert_exporter\": \"python\",\r\n   \"pygments_lexer\": \"ipython2\",\r\n   \"version\": \"2.7.6\"\r\n  }\r\n },\r\n \"nbformat\": 4,\r\n \"nbformat_minor\": 5\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/model.ipynb b/model.ipynb
--- a/model.ipynb	(revision 863070d9f660da7c76779c8caeb8dd704c8cfb56)
+++ b/model.ipynb	(date 1715185084594)
@@ -2,16 +2,14 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 206,
    "id": "initial_id",
    "metadata": {
     "collapsed": true,
     "ExecuteTime": {
-     "end_time": "2024-05-08T14:35:52.337762Z",
-     "start_time": "2024-05-08T14:35:52.311526Z"
+     "end_time": "2024-05-08T15:30:01.064526Z",
+     "start_time": "2024-05-08T15:30:01.059674Z"
     }
    },
-   "outputs": [],
    "source": [
     "import numpy as np\n",
     "import pandas as pd\n",
@@ -24,7 +22,9 @@
     "from tensorflow.keras.preprocessing.text import Tokenizer\n",
     "from keras.src.utils import pad_sequences\n",
     "from sklearn.model_selection import train_test_split"
-   ]
+   ],
+   "outputs": [],
+   "execution_count": 12
   },
   {
    "cell_type": "markdown",
@@ -40,17 +40,6 @@
   },
   {
    "cell_type": "code",
-   "outputs": [
-    {
-     "data": {
-      "text/plain": "                                                    Word Language\n72269  gründler hufvudstupa rusade in i verkstaden oc...  Swedish\n77723  lo consultaré y te informaré de qué sucedió ex...  Spanish\n12942                    dumbledore led them in a few of  English\n24075  page | 170 harry potter and the prisoner of az...  English\n71984  en brännande rodnad sprang vid dessa fadrens o...  Swedish",
-      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Word</th>\n      <th>Language</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>72269</th>\n      <td>gründler hufvudstupa rusade in i verkstaden oc...</td>\n      <td>Swedish</td>\n    </tr>\n    <tr>\n      <th>77723</th>\n      <td>lo consultaré y te informaré de qué sucedió ex...</td>\n      <td>Spanish</td>\n    </tr>\n    <tr>\n      <th>12942</th>\n      <td>dumbledore led them in a few of</td>\n      <td>English</td>\n    </tr>\n    <tr>\n      <th>24075</th>\n      <td>page | 170 harry potter and the prisoner of az...</td>\n      <td>English</td>\n    </tr>\n    <tr>\n      <th>71984</th>\n      <td>en brännande rodnad sprang vid dessa fadrens o...</td>\n      <td>Swedish</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
-     },
-     "execution_count": 207,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
    "source": [
     "df = pd.read_csv('dataset.csv')\n",
     "df = df.sample(frac=1.0, random_state=42)\n",
@@ -59,12 +48,82 @@
    "metadata": {
     "collapsed": false,
     "ExecuteTime": {
-     "end_time": "2024-05-08T14:35:52.403248Z",
-     "start_time": "2024-05-08T14:35:52.329779Z"
+     "end_time": "2024-05-08T15:30:01.179468Z",
+     "start_time": "2024-05-08T15:30:01.066524Z"
     }
    },
    "id": "9934f095638f49f4",
-   "execution_count": 207
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "                                                    Word Language\n",
+       "72269  gründler hufvudstupa rusade in i verkstaden oc...  Swedish\n",
+       "77723  lo consultaré y te informaré de qué sucedió ex...  Spanish\n",
+       "12942                    dumbledore led them in a few of  English\n",
+       "24075  page | 170 harry potter and the prisoner of az...  English\n",
+       "71984  en brännande rodnad sprang vid dessa fadrens o...  Swedish"
+      ],
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>Word</th>\n",
+       "      <th>Language</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>72269</th>\n",
+       "      <td>gründler hufvudstupa rusade in i verkstaden oc...</td>\n",
+       "      <td>Swedish</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>77723</th>\n",
+       "      <td>lo consultaré y te informaré de qué sucedió ex...</td>\n",
+       "      <td>Spanish</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>12942</th>\n",
+       "      <td>dumbledore led them in a few of</td>\n",
+       "      <td>English</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>24075</th>\n",
+       "      <td>page | 170 harry potter and the prisoner of az...</td>\n",
+       "      <td>English</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>71984</th>\n",
+       "      <td>en brännande rodnad sprang vid dessa fadrens o...</td>\n",
+       "      <td>Swedish</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ]
+     },
+     "execution_count": 13,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "execution_count": 13
   },
   {
    "cell_type": "markdown",
@@ -80,16 +139,6 @@
   },
   {
    "cell_type": "code",
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Rows: 82662\n",
-      "Amount of languages to identify: 7\n"
-     ]
-    }
-   ],
    "source": [
     "# Getting X - the input values\n",
     "X = df.iloc[:, :-1]\n",
@@ -116,16 +165,25 @@
    "metadata": {
     "collapsed": false,
     "ExecuteTime": {
-     "end_time": "2024-05-08T14:35:53.629943Z",
-     "start_time": "2024-05-08T14:35:52.406326Z"
+     "end_time": "2024-05-08T15:30:02.765306Z",
+     "start_time": "2024-05-08T15:30:01.182462Z"
     }
    },
    "id": "ba4d86402045de27",
-   "execution_count": 208
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Rows: 82662\n",
+      "Amount of languages to identify: 7\n"
+     ]
+    }
+   ],
+   "execution_count": 14
   },
   {
    "cell_type": "code",
-   "outputs": [],
    "source": [
     "model = Sequential()\n",
     "model.add(Conv1D(128, 5, activation='relu'))  # Convolutional layer\n",
@@ -140,28 +198,270 @@
    "metadata": {
     "collapsed": false,
     "ExecuteTime": {
-     "end_time": "2024-05-08T14:40:42.820317Z",
-     "start_time": "2024-05-08T14:40:42.793493Z"
+     "end_time": "2024-05-08T15:30:02.777787Z",
+     "start_time": "2024-05-08T15:30:02.766308Z"
     }
    },
    "id": "c870f2fa48fe956c",
-   "execution_count": 211
+   "outputs": [],
+   "execution_count": 15
   },
   {
    "cell_type": "code",
+   "source": [
+    "history = model.fit(X_train, y_train, validation_data=(X_val, y_val), epochs=256, batch_size=1000,verbose=1)"
+   ],
+   "metadata": {
+    "collapsed": false,
+    "ExecuteTime": {
+     "end_time": "2024-05-08T16:18:04.501575Z",
+     "start_time": "2024-05-08T15:30:02.779784Z"
+    }
+   },
+   "id": "d9a29cb1ff2dcba7",
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
       "Epoch 1/256\n",
-      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m12s\u001B[0m 165ms/step - accuracy: 0.4831 - categorical_crossentropy: 1.6431 - loss: 1.6431 - val_accuracy: 0.5701 - val_categorical_crossentropy: 1.3130 - val_loss: 1.3130\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m26s\u001B[0m 371ms/step - accuracy: 0.4982 - categorical_crossentropy: 1.6043 - loss: 1.6043 - val_accuracy: 0.5921 - val_categorical_crossentropy: 1.2756 - val_loss: 1.2756\n",
       "Epoch 2/256\n",
-      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m11s\u001B[0m 163ms/step - accuracy: 0.6127 - categorical_crossentropy: 1.2084 - loss: 1.2084 - val_accuracy: 0.6505 - val_categorical_crossentropy: 1.1035 - val_loss: 1.1035\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 366ms/step - accuracy: 0.6015 - categorical_crossentropy: 1.2289 - loss: 1.2289 - val_accuracy: 0.6053 - val_categorical_crossentropy: 1.1813 - val_loss: 1.1813\n",
       "Epoch 3/256\n",
-      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m11s\u001B[0m 166ms/step - accuracy: 0.6542 - categorical_crossentropy: 1.0946 - loss: 1.0946 - val_accuracy: 0.6634 - val_categorical_crossentropy: 1.0601 - val_loss: 1.0601\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 366ms/step - accuracy: 0.6358 - categorical_crossentropy: 1.1261 - loss: 1.1261 - val_accuracy: 0.6542 - val_categorical_crossentropy: 1.0760 - val_loss: 1.0760\n",
       "Epoch 4/256\n",
-      "\u001B[1m34/67\u001B[0m \u001B[32m━━━━━━━━━━\u001B[0m\u001B[37m━━━━━━━━━━\u001B[0m \u001B[1m5s\u001B[0m 160ms/step - accuracy: 0.6718 - categorical_crossentropy: 1.0355 - loss: 1.0355"
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 371ms/step - accuracy: 0.6694 - categorical_crossentropy: 1.0448 - loss: 1.0448 - val_accuracy: 0.6608 - val_categorical_crossentropy: 1.0502 - val_loss: 1.0502\n",
+      "Epoch 5/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 370ms/step - accuracy: 0.6750 - categorical_crossentropy: 1.0170 - loss: 1.0170 - val_accuracy: 0.6820 - val_categorical_crossentropy: 0.9786 - val_loss: 0.9786\n",
+      "Epoch 6/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 372ms/step - accuracy: 0.6874 - categorical_crossentropy: 0.9688 - loss: 0.9688 - val_accuracy: 0.6324 - val_categorical_crossentropy: 1.1359 - val_loss: 1.1359\n",
+      "Epoch 7/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 371ms/step - accuracy: 0.6776 - categorical_crossentropy: 0.9891 - loss: 0.9891 - val_accuracy: 0.6384 - val_categorical_crossentropy: 1.0575 - val_loss: 1.0575\n",
+      "Epoch 8/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 371ms/step - accuracy: 0.6756 - categorical_crossentropy: 0.9863 - loss: 0.9863 - val_accuracy: 0.7060 - val_categorical_crossentropy: 0.9034 - val_loss: 0.9034\n",
+      "Epoch 9/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 371ms/step - accuracy: 0.7083 - categorical_crossentropy: 0.8901 - loss: 0.8901 - val_accuracy: 0.7143 - val_categorical_crossentropy: 0.8659 - val_loss: 0.8659\n",
+      "Epoch 10/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 370ms/step - accuracy: 0.7161 - categorical_crossentropy: 0.8595 - loss: 0.8595 - val_accuracy: 0.7098 - val_categorical_crossentropy: 0.8679 - val_loss: 0.8679\n",
+      "Epoch 11/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 369ms/step - accuracy: 0.7177 - categorical_crossentropy: 0.8568 - loss: 0.8568 - val_accuracy: 0.7195 - val_categorical_crossentropy: 0.8470 - val_loss: 0.8470\n",
+      "Epoch 12/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 374ms/step - accuracy: 0.7273 - categorical_crossentropy: 0.8248 - loss: 0.8248 - val_accuracy: 0.7219 - val_categorical_crossentropy: 0.8342 - val_loss: 0.8342\n",
+      "Epoch 13/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 369ms/step - accuracy: 0.7268 - categorical_crossentropy: 0.8261 - loss: 0.8261 - val_accuracy: 0.7100 - val_categorical_crossentropy: 0.8842 - val_loss: 0.8842\n",
+      "Epoch 14/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 374ms/step - accuracy: 0.7216 - categorical_crossentropy: 0.8435 - loss: 0.8435 - val_accuracy: 0.7244 - val_categorical_crossentropy: 0.8202 - val_loss: 0.8202\n",
+      "Epoch 15/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 368ms/step - accuracy: 0.7308 - categorical_crossentropy: 0.8128 - loss: 0.8128 - val_accuracy: 0.7314 - val_categorical_crossentropy: 0.8086 - val_loss: 0.8086\n",
+      "Epoch 16/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 370ms/step - accuracy: 0.7387 - categorical_crossentropy: 0.7859 - loss: 0.7859 - val_accuracy: 0.6881 - val_categorical_crossentropy: 0.9146 - val_loss: 0.9146\n",
+      "Epoch 17/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 369ms/step - accuracy: 0.7279 - categorical_crossentropy: 0.8112 - loss: 0.8112 - val_accuracy: 0.7274 - val_categorical_crossentropy: 0.8153 - val_loss: 0.8153\n",
+      "Epoch 18/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 372ms/step - accuracy: 0.7441 - categorical_crossentropy: 0.7688 - loss: 0.7688 - val_accuracy: 0.7323 - val_categorical_crossentropy: 0.7895 - val_loss: 0.7895\n",
+      "Epoch 19/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 373ms/step - accuracy: 0.7418 - categorical_crossentropy: 0.7611 - loss: 0.7611 - val_accuracy: 0.7422 - val_categorical_crossentropy: 0.7662 - val_loss: 0.7662\n",
+      "Epoch 20/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 369ms/step - accuracy: 0.7447 - categorical_crossentropy: 0.7569 - loss: 0.7569 - val_accuracy: 0.7389 - val_categorical_crossentropy: 0.7957 - val_loss: 0.7957\n",
+      "Epoch 21/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 369ms/step - accuracy: 0.7478 - categorical_crossentropy: 0.7546 - loss: 0.7546 - val_accuracy: 0.7380 - val_categorical_crossentropy: 0.7804 - val_loss: 0.7804\n",
+      "Epoch 22/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 369ms/step - accuracy: 0.7469 - categorical_crossentropy: 0.7557 - loss: 0.7557 - val_accuracy: 0.7351 - val_categorical_crossentropy: 0.7952 - val_loss: 0.7952\n",
+      "Epoch 23/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 369ms/step - accuracy: 0.7517 - categorical_crossentropy: 0.7380 - loss: 0.7380 - val_accuracy: 0.7232 - val_categorical_crossentropy: 0.8299 - val_loss: 0.8299\n",
+      "Epoch 24/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 368ms/step - accuracy: 0.7458 - categorical_crossentropy: 0.7498 - loss: 0.7498 - val_accuracy: 0.7126 - val_categorical_crossentropy: 0.8525 - val_loss: 0.8525\n",
+      "Epoch 25/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 370ms/step - accuracy: 0.7474 - categorical_crossentropy: 0.7508 - loss: 0.7508 - val_accuracy: 0.7518 - val_categorical_crossentropy: 0.7374 - val_loss: 0.7374\n",
+      "Epoch 26/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 368ms/step - accuracy: 0.7606 - categorical_crossentropy: 0.7125 - loss: 0.7125 - val_accuracy: 0.7389 - val_categorical_crossentropy: 0.7760 - val_loss: 0.7760\n",
+      "Epoch 27/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 369ms/step - accuracy: 0.7546 - categorical_crossentropy: 0.7365 - loss: 0.7365 - val_accuracy: 0.7183 - val_categorical_crossentropy: 0.8301 - val_loss: 0.8301\n",
+      "Epoch 28/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 369ms/step - accuracy: 0.7508 - categorical_crossentropy: 0.7487 - loss: 0.7487 - val_accuracy: 0.7594 - val_categorical_crossentropy: 0.7086 - val_loss: 0.7086\n",
+      "Epoch 29/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 369ms/step - accuracy: 0.7521 - categorical_crossentropy: 0.7318 - loss: 0.7318 - val_accuracy: 0.7601 - val_categorical_crossentropy: 0.7014 - val_loss: 0.7014\n",
+      "Epoch 30/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 368ms/step - accuracy: 0.7627 - categorical_crossentropy: 0.6970 - loss: 0.6970 - val_accuracy: 0.7682 - val_categorical_crossentropy: 0.6945 - val_loss: 0.6945\n",
+      "Epoch 31/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 368ms/step - accuracy: 0.7634 - categorical_crossentropy: 0.7010 - loss: 0.7010 - val_accuracy: 0.7597 - val_categorical_crossentropy: 0.7204 - val_loss: 0.7204\n",
+      "Epoch 32/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 369ms/step - accuracy: 0.7686 - categorical_crossentropy: 0.6881 - loss: 0.6881 - val_accuracy: 0.7474 - val_categorical_crossentropy: 0.7539 - val_loss: 0.7539\n",
+      "Epoch 33/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 370ms/step - accuracy: 0.7669 - categorical_crossentropy: 0.6940 - loss: 0.6940 - val_accuracy: 0.7638 - val_categorical_crossentropy: 0.7026 - val_loss: 0.7026\n",
+      "Epoch 34/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 369ms/step - accuracy: 0.7659 - categorical_crossentropy: 0.6957 - loss: 0.6957 - val_accuracy: 0.7660 - val_categorical_crossentropy: 0.6991 - val_loss: 0.6991\n",
+      "Epoch 35/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 368ms/step - accuracy: 0.7731 - categorical_crossentropy: 0.6784 - loss: 0.6784 - val_accuracy: 0.7450 - val_categorical_crossentropy: 0.7791 - val_loss: 0.7791\n",
+      "Epoch 36/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 369ms/step - accuracy: 0.7704 - categorical_crossentropy: 0.6839 - loss: 0.6839 - val_accuracy: 0.7595 - val_categorical_crossentropy: 0.7131 - val_loss: 0.7131\n",
+      "Epoch 37/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 369ms/step - accuracy: 0.7672 - categorical_crossentropy: 0.6922 - loss: 0.6922 - val_accuracy: 0.7743 - val_categorical_crossentropy: 0.6774 - val_loss: 0.6774\n",
+      "Epoch 38/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 369ms/step - accuracy: 0.7771 - categorical_crossentropy: 0.6578 - loss: 0.6578 - val_accuracy: 0.7637 - val_categorical_crossentropy: 0.6932 - val_loss: 0.6932\n",
+      "Epoch 39/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m25s\u001B[0m 368ms/step - accuracy: 0.7709 - categorical_crossentropy: 0.6741 - loss: 0.6741 - val_accuracy: 0.7608 - val_categorical_crossentropy: 0.7211 - val_loss: 0.7211\n",
+      "Epoch 40/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 365ms/step - accuracy: 0.7721 - categorical_crossentropy: 0.6726 - loss: 0.6726 - val_accuracy: 0.7716 - val_categorical_crossentropy: 0.6909 - val_loss: 0.6909\n",
+      "Epoch 41/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 360ms/step - accuracy: 0.7738 - categorical_crossentropy: 0.6724 - loss: 0.6724 - val_accuracy: 0.7625 - val_categorical_crossentropy: 0.7075 - val_loss: 0.7075\n",
+      "Epoch 42/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.7743 - categorical_crossentropy: 0.6642 - loss: 0.6642 - val_accuracy: 0.7622 - val_categorical_crossentropy: 0.7148 - val_loss: 0.7148\n",
+      "Epoch 43/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 358ms/step - accuracy: 0.7741 - categorical_crossentropy: 0.6695 - loss: 0.6695 - val_accuracy: 0.7744 - val_categorical_crossentropy: 0.6673 - val_loss: 0.6673\n",
+      "Epoch 44/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.7781 - categorical_crossentropy: 0.6587 - loss: 0.6587 - val_accuracy: 0.7723 - val_categorical_crossentropy: 0.6739 - val_loss: 0.6739\n",
+      "Epoch 45/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.7764 - categorical_crossentropy: 0.6601 - loss: 0.6601 - val_accuracy: 0.7746 - val_categorical_crossentropy: 0.6703 - val_loss: 0.6703\n",
+      "Epoch 46/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 359ms/step - accuracy: 0.7778 - categorical_crossentropy: 0.6546 - loss: 0.6546 - val_accuracy: 0.7681 - val_categorical_crossentropy: 0.6998 - val_loss: 0.6998\n",
+      "Epoch 47/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.7778 - categorical_crossentropy: 0.6533 - loss: 0.6533 - val_accuracy: 0.7758 - val_categorical_crossentropy: 0.6708 - val_loss: 0.6708\n",
+      "Epoch 48/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.7731 - categorical_crossentropy: 0.6705 - loss: 0.6705 - val_accuracy: 0.7798 - val_categorical_crossentropy: 0.6521 - val_loss: 0.6521\n",
+      "Epoch 49/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 359ms/step - accuracy: 0.7835 - categorical_crossentropy: 0.6372 - loss: 0.6372 - val_accuracy: 0.7774 - val_categorical_crossentropy: 0.6597 - val_loss: 0.6597\n",
+      "Epoch 50/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.7772 - categorical_crossentropy: 0.6537 - loss: 0.6537 - val_accuracy: 0.7671 - val_categorical_crossentropy: 0.7059 - val_loss: 0.7059\n",
+      "Epoch 51/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.7732 - categorical_crossentropy: 0.6701 - loss: 0.6701 - val_accuracy: 0.7608 - val_categorical_crossentropy: 0.6923 - val_loss: 0.6923\n",
+      "Epoch 52/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.7815 - categorical_crossentropy: 0.6443 - loss: 0.6443 - val_accuracy: 0.7801 - val_categorical_crossentropy: 0.6498 - val_loss: 0.6498\n",
+      "Epoch 53/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.7845 - categorical_crossentropy: 0.6344 - loss: 0.6344 - val_accuracy: 0.7790 - val_categorical_crossentropy: 0.6546 - val_loss: 0.6546\n",
+      "Epoch 54/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.7858 - categorical_crossentropy: 0.6365 - loss: 0.6365 - val_accuracy: 0.7777 - val_categorical_crossentropy: 0.6530 - val_loss: 0.6530\n",
+      "Epoch 55/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.7894 - categorical_crossentropy: 0.6232 - loss: 0.6232 - val_accuracy: 0.7844 - val_categorical_crossentropy: 0.6386 - val_loss: 0.6386\n",
+      "Epoch 56/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 359ms/step - accuracy: 0.7918 - categorical_crossentropy: 0.6125 - loss: 0.6125 - val_accuracy: 0.7732 - val_categorical_crossentropy: 0.6777 - val_loss: 0.6777\n",
+      "Epoch 57/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 360ms/step - accuracy: 0.7867 - categorical_crossentropy: 0.6294 - loss: 0.6294 - val_accuracy: 0.7876 - val_categorical_crossentropy: 0.6343 - val_loss: 0.6343\n",
+      "Epoch 58/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.7933 - categorical_crossentropy: 0.6092 - loss: 0.6092 - val_accuracy: 0.7752 - val_categorical_crossentropy: 0.6660 - val_loss: 0.6660\n",
+      "Epoch 59/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.7855 - categorical_crossentropy: 0.6284 - loss: 0.6284 - val_accuracy: 0.7797 - val_categorical_crossentropy: 0.6410 - val_loss: 0.6410\n",
+      "Epoch 60/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.7923 - categorical_crossentropy: 0.6143 - loss: 0.6143 - val_accuracy: 0.7831 - val_categorical_crossentropy: 0.6389 - val_loss: 0.6389\n",
+      "Epoch 61/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 362ms/step - accuracy: 0.7874 - categorical_crossentropy: 0.6246 - loss: 0.6246 - val_accuracy: 0.7766 - val_categorical_crossentropy: 0.6607 - val_loss: 0.6607\n",
+      "Epoch 62/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 358ms/step - accuracy: 0.7951 - categorical_crossentropy: 0.6068 - loss: 0.6068 - val_accuracy: 0.7727 - val_categorical_crossentropy: 0.6692 - val_loss: 0.6692\n",
+      "Epoch 63/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 358ms/step - accuracy: 0.7908 - categorical_crossentropy: 0.6168 - loss: 0.6168 - val_accuracy: 0.7835 - val_categorical_crossentropy: 0.6352 - val_loss: 0.6352\n",
+      "Epoch 64/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.7931 - categorical_crossentropy: 0.6072 - loss: 0.6072 - val_accuracy: 0.7820 - val_categorical_crossentropy: 0.6497 - val_loss: 0.6497\n",
+      "Epoch 65/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 358ms/step - accuracy: 0.7931 - categorical_crossentropy: 0.6066 - loss: 0.6066 - val_accuracy: 0.7865 - val_categorical_crossentropy: 0.6339 - val_loss: 0.6339\n",
+      "Epoch 66/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.7914 - categorical_crossentropy: 0.6106 - loss: 0.6106 - val_accuracy: 0.7642 - val_categorical_crossentropy: 0.6935 - val_loss: 0.6935\n",
+      "Epoch 67/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.7925 - categorical_crossentropy: 0.6131 - loss: 0.6131 - val_accuracy: 0.7735 - val_categorical_crossentropy: 0.6661 - val_loss: 0.6661\n",
+      "Epoch 68/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.7913 - categorical_crossentropy: 0.6139 - loss: 0.6139 - val_accuracy: 0.7572 - val_categorical_crossentropy: 0.7120 - val_loss: 0.7120\n",
+      "Epoch 69/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 358ms/step - accuracy: 0.7877 - categorical_crossentropy: 0.6202 - loss: 0.6202 - val_accuracy: 0.7611 - val_categorical_crossentropy: 0.8082 - val_loss: 0.8082\n",
+      "Epoch 70/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 358ms/step - accuracy: 0.7878 - categorical_crossentropy: 0.6303 - loss: 0.6303 - val_accuracy: 0.7843 - val_categorical_crossentropy: 0.6553 - val_loss: 0.6553\n",
+      "Epoch 71/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.8028 - categorical_crossentropy: 0.5888 - loss: 0.5888 - val_accuracy: 0.7769 - val_categorical_crossentropy: 0.6628 - val_loss: 0.6628\n",
+      "Epoch 72/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 359ms/step - accuracy: 0.7971 - categorical_crossentropy: 0.5998 - loss: 0.5998 - val_accuracy: 0.7885 - val_categorical_crossentropy: 0.6210 - val_loss: 0.6210\n",
+      "Epoch 73/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.7978 - categorical_crossentropy: 0.5976 - loss: 0.5976 - val_accuracy: 0.7833 - val_categorical_crossentropy: 0.6538 - val_loss: 0.6538\n",
+      "Epoch 74/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.7986 - categorical_crossentropy: 0.5990 - loss: 0.5990 - val_accuracy: 0.7946 - val_categorical_crossentropy: 0.6209 - val_loss: 0.6209\n",
+      "Epoch 75/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.7959 - categorical_crossentropy: 0.6088 - loss: 0.6088 - val_accuracy: 0.7979 - val_categorical_crossentropy: 0.5915 - val_loss: 0.5915\n",
+      "Epoch 76/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 359ms/step - accuracy: 0.7965 - categorical_crossentropy: 0.6014 - loss: 0.6014 - val_accuracy: 0.7956 - val_categorical_crossentropy: 0.6117 - val_loss: 0.6117\n",
+      "Epoch 77/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.8016 - categorical_crossentropy: 0.5799 - loss: 0.5799 - val_accuracy: 0.7957 - val_categorical_crossentropy: 0.6014 - val_loss: 0.6014\n",
+      "Epoch 78/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 358ms/step - accuracy: 0.8029 - categorical_crossentropy: 0.5782 - loss: 0.5782 - val_accuracy: 0.7938 - val_categorical_crossentropy: 0.6100 - val_loss: 0.6100\n",
+      "Epoch 79/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.7985 - categorical_crossentropy: 0.5887 - loss: 0.5887 - val_accuracy: 0.7986 - val_categorical_crossentropy: 0.5929 - val_loss: 0.5929\n",
+      "Epoch 80/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.8046 - categorical_crossentropy: 0.5720 - loss: 0.5720 - val_accuracy: 0.7882 - val_categorical_crossentropy: 0.6352 - val_loss: 0.6352\n",
+      "Epoch 81/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.8004 - categorical_crossentropy: 0.5903 - loss: 0.5903 - val_accuracy: 0.7985 - val_categorical_crossentropy: 0.6013 - val_loss: 0.6013\n",
+      "Epoch 82/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 358ms/step - accuracy: 0.8042 - categorical_crossentropy: 0.5769 - loss: 0.5769 - val_accuracy: 0.7960 - val_categorical_crossentropy: 0.6035 - val_loss: 0.6035\n",
+      "Epoch 83/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.8034 - categorical_crossentropy: 0.5773 - loss: 0.5773 - val_accuracy: 0.7947 - val_categorical_crossentropy: 0.6109 - val_loss: 0.6109\n",
+      "Epoch 84/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.8033 - categorical_crossentropy: 0.5826 - loss: 0.5826 - val_accuracy: 0.7961 - val_categorical_crossentropy: 0.6136 - val_loss: 0.6136\n",
+      "Epoch 85/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.8061 - categorical_crossentropy: 0.5694 - loss: 0.5694 - val_accuracy: 0.7761 - val_categorical_crossentropy: 0.6678 - val_loss: 0.6678\n",
+      "Epoch 86/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.7991 - categorical_crossentropy: 0.5956 - loss: 0.5956 - val_accuracy: 0.7917 - val_categorical_crossentropy: 0.6191 - val_loss: 0.6191\n",
+      "Epoch 87/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.7996 - categorical_crossentropy: 0.5882 - loss: 0.5882 - val_accuracy: 0.7908 - val_categorical_crossentropy: 0.6243 - val_loss: 0.6243\n",
+      "Epoch 88/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.8045 - categorical_crossentropy: 0.5715 - loss: 0.5715 - val_accuracy: 0.7916 - val_categorical_crossentropy: 0.6110 - val_loss: 0.6110\n",
+      "Epoch 89/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.8065 - categorical_crossentropy: 0.5669 - loss: 0.5669 - val_accuracy: 0.7965 - val_categorical_crossentropy: 0.6056 - val_loss: 0.6056\n",
+      "Epoch 90/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.8047 - categorical_crossentropy: 0.5687 - loss: 0.5687 - val_accuracy: 0.7797 - val_categorical_crossentropy: 0.6492 - val_loss: 0.6492\n",
+      "Epoch 91/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.8044 - categorical_crossentropy: 0.5794 - loss: 0.5794 - val_accuracy: 0.7982 - val_categorical_crossentropy: 0.5978 - val_loss: 0.5978\n",
+      "Epoch 92/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.8090 - categorical_crossentropy: 0.5661 - loss: 0.5661 - val_accuracy: 0.7823 - val_categorical_crossentropy: 0.6772 - val_loss: 0.6772\n",
+      "Epoch 93/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.7995 - categorical_crossentropy: 0.5939 - loss: 0.5939 - val_accuracy: 0.8015 - val_categorical_crossentropy: 0.5821 - val_loss: 0.5821\n",
+      "Epoch 94/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.8124 - categorical_crossentropy: 0.5522 - loss: 0.5522 - val_accuracy: 0.7730 - val_categorical_crossentropy: 0.6674 - val_loss: 0.6674\n",
+      "Epoch 95/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.8019 - categorical_crossentropy: 0.5815 - loss: 0.5815 - val_accuracy: 0.7987 - val_categorical_crossentropy: 0.6036 - val_loss: 0.6036\n",
+      "Epoch 96/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 359ms/step - accuracy: 0.8102 - categorical_crossentropy: 0.5659 - loss: 0.5659 - val_accuracy: 0.8035 - val_categorical_crossentropy: 0.5841 - val_loss: 0.5841\n",
+      "Epoch 97/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.8122 - categorical_crossentropy: 0.5573 - loss: 0.5573 - val_accuracy: 0.7980 - val_categorical_crossentropy: 0.6037 - val_loss: 0.6037\n",
+      "Epoch 98/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.8129 - categorical_crossentropy: 0.5532 - loss: 0.5532 - val_accuracy: 0.7885 - val_categorical_crossentropy: 0.6396 - val_loss: 0.6396\n",
+      "Epoch 99/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 355ms/step - accuracy: 0.7994 - categorical_crossentropy: 0.5873 - loss: 0.5873 - val_accuracy: 0.8039 - val_categorical_crossentropy: 0.5777 - val_loss: 0.5777\n",
+      "Epoch 100/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.8115 - categorical_crossentropy: 0.5610 - loss: 0.5610 - val_accuracy: 0.8062 - val_categorical_crossentropy: 0.5723 - val_loss: 0.5723\n",
+      "Epoch 101/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.8097 - categorical_crossentropy: 0.5590 - loss: 0.5590 - val_accuracy: 0.7985 - val_categorical_crossentropy: 0.6017 - val_loss: 0.6017\n",
+      "Epoch 102/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.8108 - categorical_crossentropy: 0.5560 - loss: 0.5560 - val_accuracy: 0.8092 - val_categorical_crossentropy: 0.5652 - val_loss: 0.5652\n",
+      "Epoch 103/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.8116 - categorical_crossentropy: 0.5560 - loss: 0.5560 - val_accuracy: 0.8037 - val_categorical_crossentropy: 0.5721 - val_loss: 0.5721\n",
+      "Epoch 104/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.8122 - categorical_crossentropy: 0.5502 - loss: 0.5502 - val_accuracy: 0.8089 - val_categorical_crossentropy: 0.5580 - val_loss: 0.5580\n",
+      "Epoch 105/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.8130 - categorical_crossentropy: 0.5506 - loss: 0.5506 - val_accuracy: 0.8022 - val_categorical_crossentropy: 0.5911 - val_loss: 0.5911\n",
+      "Epoch 106/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.8104 - categorical_crossentropy: 0.5616 - loss: 0.5616 - val_accuracy: 0.8045 - val_categorical_crossentropy: 0.5815 - val_loss: 0.5815\n",
+      "Epoch 107/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.8082 - categorical_crossentropy: 0.5543 - loss: 0.5543 - val_accuracy: 0.8072 - val_categorical_crossentropy: 0.5739 - val_loss: 0.5739\n",
+      "Epoch 108/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.8130 - categorical_crossentropy: 0.5464 - loss: 0.5464 - val_accuracy: 0.7732 - val_categorical_crossentropy: 0.6758 - val_loss: 0.6758\n",
+      "Epoch 109/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.8086 - categorical_crossentropy: 0.5680 - loss: 0.5680 - val_accuracy: 0.7984 - val_categorical_crossentropy: 0.5989 - val_loss: 0.5989\n",
+      "Epoch 110/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.8105 - categorical_crossentropy: 0.5495 - loss: 0.5495 - val_accuracy: 0.8069 - val_categorical_crossentropy: 0.5660 - val_loss: 0.5660\n",
+      "Epoch 111/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 362ms/step - accuracy: 0.8160 - categorical_crossentropy: 0.5376 - loss: 0.5376 - val_accuracy: 0.7844 - val_categorical_crossentropy: 0.6342 - val_loss: 0.6342\n",
+      "Epoch 112/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.8074 - categorical_crossentropy: 0.5615 - loss: 0.5615 - val_accuracy: 0.7964 - val_categorical_crossentropy: 0.5898 - val_loss: 0.5898\n",
+      "Epoch 113/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.8137 - categorical_crossentropy: 0.5426 - loss: 0.5426 - val_accuracy: 0.8054 - val_categorical_crossentropy: 0.5885 - val_loss: 0.5885\n",
+      "Epoch 114/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.8144 - categorical_crossentropy: 0.5466 - loss: 0.5466 - val_accuracy: 0.8049 - val_categorical_crossentropy: 0.5744 - val_loss: 0.5744\n",
+      "Epoch 115/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.8132 - categorical_crossentropy: 0.5518 - loss: 0.5518 - val_accuracy: 0.7978 - val_categorical_crossentropy: 0.5878 - val_loss: 0.5878\n",
+      "Epoch 116/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 357ms/step - accuracy: 0.8128 - categorical_crossentropy: 0.5491 - loss: 0.5491 - val_accuracy: 0.7979 - val_categorical_crossentropy: 0.6229 - val_loss: 0.6229\n",
+      "Epoch 117/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 356ms/step - accuracy: 0.8155 - categorical_crossentropy: 0.5422 - loss: 0.5422 - val_accuracy: 0.7937 - val_categorical_crossentropy: 0.6188 - val_loss: 0.6188\n",
+      "Epoch 118/256\n",
+      "\u001B[1m67/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m\u001B[0m \u001B[1m24s\u001B[0m 362ms/step - accuracy: 0.8115 - categorical_crossentropy: 0.5541 - loss: 0.5541 - val_accuracy: 0.8123 - val_categorical_crossentropy: 0.5568 - val_loss: 0.5568\n",
+      "Epoch 119/256\n",
+      "\u001B[1m61/67\u001B[0m \u001B[32m━━━━━━━━━━━━━━━━━━\u001B[0m\u001B[37m━━\u001B[0m \u001B[1m2s\u001B[0m 359ms/step - accuracy: 0.8159 - categorical_crossentropy: 0.5339 - loss: 0.5339"
      ]
     },
     {
@@ -169,40 +469,28 @@
      "evalue": "",
      "output_type": "error",
      "traceback": [
-      "\u001B[0;31m---------------------------------------------------------------------------\u001B[0m",
-      "\u001B[0;31mKeyboardInterrupt\u001B[0m                         Traceback (most recent call last)",
-      "Cell \u001B[0;32mIn[212], line 1\u001B[0m\n\u001B[0;32m----> 1\u001B[0m history \u001B[38;5;241m=\u001B[39m \u001B[43mmodel\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mfit\u001B[49m\u001B[43m(\u001B[49m\u001B[43mX_train\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43my_train\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mvalidation_data\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43m(\u001B[49m\u001B[43mX_val\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43my_val\u001B[49m\u001B[43m)\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mepochs\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;241;43m256\u001B[39;49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mbatch_size\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;241;43m1000\u001B[39;49m\u001B[43m,\u001B[49m\u001B[43mverbose\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;241;43m1\u001B[39;49m\u001B[43m)\u001B[49m\n",
-      "File \u001B[0;32m~/PycharmProjects/languageLense/.venv/lib/python3.9/site-packages/keras/src/utils/traceback_utils.py:117\u001B[0m, in \u001B[0;36mfilter_traceback.<locals>.error_handler\u001B[0;34m(*args, **kwargs)\u001B[0m\n\u001B[1;32m    115\u001B[0m filtered_tb \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;01mNone\u001B[39;00m\n\u001B[1;32m    116\u001B[0m \u001B[38;5;28;01mtry\u001B[39;00m:\n\u001B[0;32m--> 117\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[43mfn\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mkwargs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    118\u001B[0m \u001B[38;5;28;01mexcept\u001B[39;00m \u001B[38;5;167;01mException\u001B[39;00m \u001B[38;5;28;01mas\u001B[39;00m e:\n\u001B[1;32m    119\u001B[0m     filtered_tb \u001B[38;5;241m=\u001B[39m _process_traceback_frames(e\u001B[38;5;241m.\u001B[39m__traceback__)\n",
-      "File \u001B[0;32m~/PycharmProjects/languageLense/.venv/lib/python3.9/site-packages/keras/src/backend/tensorflow/trainer.py:314\u001B[0m, in \u001B[0;36mTensorFlowTrainer.fit\u001B[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq)\u001B[0m\n\u001B[1;32m    312\u001B[0m \u001B[38;5;28;01mfor\u001B[39;00m step, iterator \u001B[38;5;129;01min\u001B[39;00m epoch_iterator\u001B[38;5;241m.\u001B[39menumerate_epoch():\n\u001B[1;32m    313\u001B[0m     callbacks\u001B[38;5;241m.\u001B[39mon_train_batch_begin(step)\n\u001B[0;32m--> 314\u001B[0m     logs \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mtrain_function\u001B[49m\u001B[43m(\u001B[49m\u001B[43miterator\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    315\u001B[0m     logs \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_pythonify_logs(logs)\n\u001B[1;32m    316\u001B[0m     callbacks\u001B[38;5;241m.\u001B[39mon_train_batch_end(step, logs)\n",
-      "File \u001B[0;32m~/PycharmProjects/languageLense/.venv/lib/python3.9/site-packages/tensorflow/python/util/traceback_utils.py:150\u001B[0m, in \u001B[0;36mfilter_traceback.<locals>.error_handler\u001B[0;34m(*args, **kwargs)\u001B[0m\n\u001B[1;32m    148\u001B[0m filtered_tb \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;01mNone\u001B[39;00m\n\u001B[1;32m    149\u001B[0m \u001B[38;5;28;01mtry\u001B[39;00m:\n\u001B[0;32m--> 150\u001B[0m   \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[43mfn\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mkwargs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    151\u001B[0m \u001B[38;5;28;01mexcept\u001B[39;00m \u001B[38;5;167;01mException\u001B[39;00m \u001B[38;5;28;01mas\u001B[39;00m e:\n\u001B[1;32m    152\u001B[0m   filtered_tb \u001B[38;5;241m=\u001B[39m _process_traceback_frames(e\u001B[38;5;241m.\u001B[39m__traceback__)\n",
-      "File \u001B[0;32m~/PycharmProjects/languageLense/.venv/lib/python3.9/site-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py:833\u001B[0m, in \u001B[0;36mFunction.__call__\u001B[0;34m(self, *args, **kwds)\u001B[0m\n\u001B[1;32m    830\u001B[0m compiler \u001B[38;5;241m=\u001B[39m \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mxla\u001B[39m\u001B[38;5;124m\"\u001B[39m \u001B[38;5;28;01mif\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_jit_compile \u001B[38;5;28;01melse\u001B[39;00m \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mnonXla\u001B[39m\u001B[38;5;124m\"\u001B[39m\n\u001B[1;32m    832\u001B[0m \u001B[38;5;28;01mwith\u001B[39;00m OptionalXlaContext(\u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_jit_compile):\n\u001B[0;32m--> 833\u001B[0m   result \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_call\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mkwds\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    835\u001B[0m new_tracing_count \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mexperimental_get_tracing_count()\n\u001B[1;32m    836\u001B[0m without_tracing \u001B[38;5;241m=\u001B[39m (tracing_count \u001B[38;5;241m==\u001B[39m new_tracing_count)\n",
-      "File \u001B[0;32m~/PycharmProjects/languageLense/.venv/lib/python3.9/site-packages/tensorflow/python/eager/polymorphic_function/polymorphic_function.py:878\u001B[0m, in \u001B[0;36mFunction._call\u001B[0;34m(self, *args, **kwds)\u001B[0m\n\u001B[1;32m    875\u001B[0m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_lock\u001B[38;5;241m.\u001B[39mrelease()\n\u001B[1;32m    876\u001B[0m \u001B[38;5;66;03m# In this case we have not created variables on the first call. So we can\u001B[39;00m\n\u001B[1;32m    877\u001B[0m \u001B[38;5;66;03m# run the first trace but we should fail if variables are created.\u001B[39;00m\n\u001B[0;32m--> 878\u001B[0m results \u001B[38;5;241m=\u001B[39m \u001B[43mtracing_compilation\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mcall_function\u001B[49m\u001B[43m(\u001B[49m\n\u001B[1;32m    879\u001B[0m \u001B[43m    \u001B[49m\u001B[43margs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mkwds\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_variable_creation_config\u001B[49m\n\u001B[1;32m    880\u001B[0m \u001B[43m\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    881\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_created_variables:\n\u001B[1;32m    882\u001B[0m   \u001B[38;5;28;01mraise\u001B[39;00m \u001B[38;5;167;01mValueError\u001B[39;00m(\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mCreating variables on a non-first call to a function\u001B[39m\u001B[38;5;124m\"\u001B[39m\n\u001B[1;32m    883\u001B[0m                    \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124m decorated with tf.function.\u001B[39m\u001B[38;5;124m\"\u001B[39m)\n",
-      "File \u001B[0;32m~/PycharmProjects/languageLense/.venv/lib/python3.9/site-packages/tensorflow/python/eager/polymorphic_function/tracing_compilation.py:139\u001B[0m, in \u001B[0;36mcall_function\u001B[0;34m(args, kwargs, tracing_options)\u001B[0m\n\u001B[1;32m    137\u001B[0m bound_args \u001B[38;5;241m=\u001B[39m function\u001B[38;5;241m.\u001B[39mfunction_type\u001B[38;5;241m.\u001B[39mbind(\u001B[38;5;241m*\u001B[39margs, \u001B[38;5;241m*\u001B[39m\u001B[38;5;241m*\u001B[39mkwargs)\n\u001B[1;32m    138\u001B[0m flat_inputs \u001B[38;5;241m=\u001B[39m function\u001B[38;5;241m.\u001B[39mfunction_type\u001B[38;5;241m.\u001B[39munpack_inputs(bound_args)\n\u001B[0;32m--> 139\u001B[0m \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[43mfunction\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_call_flat\u001B[49m\u001B[43m(\u001B[49m\u001B[43m  \u001B[49m\u001B[38;5;66;43;03m# pylint: disable=protected-access\u001B[39;49;00m\n\u001B[1;32m    140\u001B[0m \u001B[43m    \u001B[49m\u001B[43mflat_inputs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mcaptured_inputs\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mfunction\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mcaptured_inputs\u001B[49m\n\u001B[1;32m    141\u001B[0m \u001B[43m\u001B[49m\u001B[43m)\u001B[49m\n",
-      "File \u001B[0;32m~/PycharmProjects/languageLense/.venv/lib/python3.9/site-packages/tensorflow/python/eager/polymorphic_function/concrete_function.py:1322\u001B[0m, in \u001B[0;36mConcreteFunction._call_flat\u001B[0;34m(self, tensor_inputs, captured_inputs)\u001B[0m\n\u001B[1;32m   1318\u001B[0m possible_gradient_type \u001B[38;5;241m=\u001B[39m gradients_util\u001B[38;5;241m.\u001B[39mPossibleTapeGradientTypes(args)\n\u001B[1;32m   1319\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m (possible_gradient_type \u001B[38;5;241m==\u001B[39m gradients_util\u001B[38;5;241m.\u001B[39mPOSSIBLE_GRADIENT_TYPES_NONE\n\u001B[1;32m   1320\u001B[0m     \u001B[38;5;129;01mand\u001B[39;00m executing_eagerly):\n\u001B[1;32m   1321\u001B[0m   \u001B[38;5;66;03m# No tape is watching; skip to running the function.\u001B[39;00m\n\u001B[0;32m-> 1322\u001B[0m   \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_inference_function\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mcall_preflattened\u001B[49m\u001B[43m(\u001B[49m\u001B[43margs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m   1323\u001B[0m forward_backward \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_select_forward_and_backward_functions(\n\u001B[1;32m   1324\u001B[0m     args,\n\u001B[1;32m   1325\u001B[0m     possible_gradient_type,\n\u001B[1;32m   1326\u001B[0m     executing_eagerly)\n\u001B[1;32m   1327\u001B[0m forward_function, args_with_tangents \u001B[38;5;241m=\u001B[39m forward_backward\u001B[38;5;241m.\u001B[39mforward()\n",
-      "File \u001B[0;32m~/PycharmProjects/languageLense/.venv/lib/python3.9/site-packages/tensorflow/python/eager/polymorphic_function/atomic_function.py:216\u001B[0m, in \u001B[0;36mAtomicFunction.call_preflattened\u001B[0;34m(self, args)\u001B[0m\n\u001B[1;32m    214\u001B[0m \u001B[38;5;28;01mdef\u001B[39;00m \u001B[38;5;21mcall_preflattened\u001B[39m(\u001B[38;5;28mself\u001B[39m, args: Sequence[core\u001B[38;5;241m.\u001B[39mTensor]) \u001B[38;5;241m-\u001B[39m\u001B[38;5;241m>\u001B[39m Any:\n\u001B[1;32m    215\u001B[0m \u001B[38;5;250m  \u001B[39m\u001B[38;5;124;03m\"\"\"Calls with flattened tensor inputs and returns the structured output.\"\"\"\u001B[39;00m\n\u001B[0;32m--> 216\u001B[0m   flat_outputs \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mcall_flat\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    217\u001B[0m   \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mfunction_type\u001B[38;5;241m.\u001B[39mpack_output(flat_outputs)\n",
-      "File \u001B[0;32m~/PycharmProjects/languageLense/.venv/lib/python3.9/site-packages/tensorflow/python/eager/polymorphic_function/atomic_function.py:251\u001B[0m, in \u001B[0;36mAtomicFunction.call_flat\u001B[0;34m(self, *args)\u001B[0m\n\u001B[1;32m    249\u001B[0m \u001B[38;5;28;01mwith\u001B[39;00m record\u001B[38;5;241m.\u001B[39mstop_recording():\n\u001B[1;32m    250\u001B[0m   \u001B[38;5;28;01mif\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_bound_context\u001B[38;5;241m.\u001B[39mexecuting_eagerly():\n\u001B[0;32m--> 251\u001B[0m     outputs \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_bound_context\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mcall_function\u001B[49m\u001B[43m(\u001B[49m\n\u001B[1;32m    252\u001B[0m \u001B[43m        \u001B[49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mname\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    253\u001B[0m \u001B[43m        \u001B[49m\u001B[38;5;28;43mlist\u001B[39;49m\u001B[43m(\u001B[49m\u001B[43margs\u001B[49m\u001B[43m)\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    254\u001B[0m \u001B[43m        \u001B[49m\u001B[38;5;28;43mlen\u001B[39;49m\u001B[43m(\u001B[49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mfunction_type\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mflat_outputs\u001B[49m\u001B[43m)\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m    255\u001B[0m \u001B[43m    \u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m    256\u001B[0m   \u001B[38;5;28;01melse\u001B[39;00m:\n\u001B[1;32m    257\u001B[0m     outputs \u001B[38;5;241m=\u001B[39m make_call_op_in_graph(\n\u001B[1;32m    258\u001B[0m         \u001B[38;5;28mself\u001B[39m,\n\u001B[1;32m    259\u001B[0m         \u001B[38;5;28mlist\u001B[39m(args),\n\u001B[1;32m    260\u001B[0m         \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_bound_context\u001B[38;5;241m.\u001B[39mfunction_call_options\u001B[38;5;241m.\u001B[39mas_attrs(),\n\u001B[1;32m    261\u001B[0m     )\n",
-      "File \u001B[0;32m~/PycharmProjects/languageLense/.venv/lib/python3.9/site-packages/tensorflow/python/eager/context.py:1500\u001B[0m, in \u001B[0;36mContext.call_function\u001B[0;34m(self, name, tensor_inputs, num_outputs)\u001B[0m\n\u001B[1;32m   1498\u001B[0m cancellation_context \u001B[38;5;241m=\u001B[39m cancellation\u001B[38;5;241m.\u001B[39mcontext()\n\u001B[1;32m   1499\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m cancellation_context \u001B[38;5;129;01mis\u001B[39;00m \u001B[38;5;28;01mNone\u001B[39;00m:\n\u001B[0;32m-> 1500\u001B[0m   outputs \u001B[38;5;241m=\u001B[39m \u001B[43mexecute\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mexecute\u001B[49m\u001B[43m(\u001B[49m\n\u001B[1;32m   1501\u001B[0m \u001B[43m      \u001B[49m\u001B[43mname\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mdecode\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[38;5;124;43mutf-8\u001B[39;49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[43m)\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m   1502\u001B[0m \u001B[43m      \u001B[49m\u001B[43mnum_outputs\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mnum_outputs\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m   1503\u001B[0m \u001B[43m      \u001B[49m\u001B[43minputs\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mtensor_inputs\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m   1504\u001B[0m \u001B[43m      \u001B[49m\u001B[43mattrs\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mattrs\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m   1505\u001B[0m \u001B[43m      \u001B[49m\u001B[43mctx\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[43m,\u001B[49m\n\u001B[1;32m   1506\u001B[0m \u001B[43m  \u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m   1507\u001B[0m \u001B[38;5;28;01melse\u001B[39;00m:\n\u001B[1;32m   1508\u001B[0m   outputs \u001B[38;5;241m=\u001B[39m execute\u001B[38;5;241m.\u001B[39mexecute_with_cancellation(\n\u001B[1;32m   1509\u001B[0m       name\u001B[38;5;241m.\u001B[39mdecode(\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mutf-8\u001B[39m\u001B[38;5;124m\"\u001B[39m),\n\u001B[1;32m   1510\u001B[0m       num_outputs\u001B[38;5;241m=\u001B[39mnum_outputs,\n\u001B[0;32m   (...)\u001B[0m\n\u001B[1;32m   1514\u001B[0m       cancellation_manager\u001B[38;5;241m=\u001B[39mcancellation_context,\n\u001B[1;32m   1515\u001B[0m   )\n",
-      "File \u001B[0;32m~/PycharmProjects/languageLense/.venv/lib/python3.9/site-packages/tensorflow/python/eager/execute.py:53\u001B[0m, in \u001B[0;36mquick_execute\u001B[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001B[0m\n\u001B[1;32m     51\u001B[0m \u001B[38;5;28;01mtry\u001B[39;00m:\n\u001B[1;32m     52\u001B[0m   ctx\u001B[38;5;241m.\u001B[39mensure_initialized()\n\u001B[0;32m---> 53\u001B[0m   tensors \u001B[38;5;241m=\u001B[39m \u001B[43mpywrap_tfe\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mTFE_Py_Execute\u001B[49m\u001B[43m(\u001B[49m\u001B[43mctx\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_handle\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mdevice_name\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mop_name\u001B[49m\u001B[43m,\u001B[49m\n\u001B[1;32m     54\u001B[0m \u001B[43m                                      \u001B[49m\u001B[43minputs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mattrs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mnum_outputs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[1;32m     55\u001B[0m \u001B[38;5;28;01mexcept\u001B[39;00m core\u001B[38;5;241m.\u001B[39m_NotOkStatusException \u001B[38;5;28;01mas\u001B[39;00m e:\n\u001B[1;32m     56\u001B[0m   \u001B[38;5;28;01mif\u001B[39;00m name \u001B[38;5;129;01mis\u001B[39;00m \u001B[38;5;129;01mnot\u001B[39;00m \u001B[38;5;28;01mNone\u001B[39;00m:\n",
-      "\u001B[0;31mKeyboardInterrupt\u001B[0m: "
+      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
+      "\u001B[1;31mKeyboardInterrupt\u001B[0m                         Traceback (most recent call last)",
+      "Cell \u001B[1;32mIn[16], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m history \u001B[38;5;241m=\u001B[39m \u001B[43mmodel\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mfit\u001B[49m\u001B[43m(\u001B[49m\u001B[43mX_train\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43my_train\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mvalidation_data\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43m(\u001B[49m\u001B[43mX_val\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43my_val\u001B[49m\u001B[43m)\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mepochs\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;241;43m256\u001B[39;49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mbatch_size\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;241;43m1000\u001B[39;49m\u001B[43m,\u001B[49m\u001B[43mverbose\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;241;43m1\u001B[39;49m\u001B[43m)\u001B[49m\n",
+      "File \u001B[1;32m~\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\keras\\src\\utils\\traceback_utils.py:117\u001B[0m, in \u001B[0;36mfilter_traceback.<locals>.error_handler\u001B[1;34m(*args, **kwargs)\u001B[0m\n\u001B[0;32m    115\u001B[0m filtered_tb \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;01mNone\u001B[39;00m\n\u001B[0;32m    116\u001B[0m \u001B[38;5;28;01mtry\u001B[39;00m:\n\u001B[1;32m--> 117\u001B[0m     \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[43mfn\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mkwargs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[0;32m    118\u001B[0m \u001B[38;5;28;01mexcept\u001B[39;00m \u001B[38;5;167;01mException\u001B[39;00m \u001B[38;5;28;01mas\u001B[39;00m e:\n\u001B[0;32m    119\u001B[0m     filtered_tb \u001B[38;5;241m=\u001B[39m _process_traceback_frames(e\u001B[38;5;241m.\u001B[39m__traceback__)\n",
+      "File \u001B[1;32m~\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\keras\\src\\backend\\tensorflow\\trainer.py:314\u001B[0m, in \u001B[0;36mTensorFlowTrainer.fit\u001B[1;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq)\u001B[0m\n\u001B[0;32m    312\u001B[0m \u001B[38;5;28;01mfor\u001B[39;00m step, iterator \u001B[38;5;129;01min\u001B[39;00m epoch_iterator\u001B[38;5;241m.\u001B[39menumerate_epoch():\n\u001B[0;32m    313\u001B[0m     callbacks\u001B[38;5;241m.\u001B[39mon_train_batch_begin(step)\n\u001B[1;32m--> 314\u001B[0m     logs \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mtrain_function\u001B[49m\u001B[43m(\u001B[49m\u001B[43miterator\u001B[49m\u001B[43m)\u001B[49m\n\u001B[0;32m    315\u001B[0m     logs \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_pythonify_logs(logs)\n\u001B[0;32m    316\u001B[0m     callbacks\u001B[38;5;241m.\u001B[39mon_train_batch_end(step, logs)\n",
+      "File \u001B[1;32m~\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\tensorflow\\python\\util\\traceback_utils.py:150\u001B[0m, in \u001B[0;36mfilter_traceback.<locals>.error_handler\u001B[1;34m(*args, **kwargs)\u001B[0m\n\u001B[0;32m    148\u001B[0m filtered_tb \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;01mNone\u001B[39;00m\n\u001B[0;32m    149\u001B[0m \u001B[38;5;28;01mtry\u001B[39;00m:\n\u001B[1;32m--> 150\u001B[0m   \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[43mfn\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mkwargs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[0;32m    151\u001B[0m \u001B[38;5;28;01mexcept\u001B[39;00m \u001B[38;5;167;01mException\u001B[39;00m \u001B[38;5;28;01mas\u001B[39;00m e:\n\u001B[0;32m    152\u001B[0m   filtered_tb \u001B[38;5;241m=\u001B[39m _process_traceback_frames(e\u001B[38;5;241m.\u001B[39m__traceback__)\n",
+      "File \u001B[1;32m~\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\tensorflow\\python\\eager\\polymorphic_function\\polymorphic_function.py:833\u001B[0m, in \u001B[0;36mFunction.__call__\u001B[1;34m(self, *args, **kwds)\u001B[0m\n\u001B[0;32m    830\u001B[0m compiler \u001B[38;5;241m=\u001B[39m \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mxla\u001B[39m\u001B[38;5;124m\"\u001B[39m \u001B[38;5;28;01mif\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_jit_compile \u001B[38;5;28;01melse\u001B[39;00m \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mnonXla\u001B[39m\u001B[38;5;124m\"\u001B[39m\n\u001B[0;32m    832\u001B[0m \u001B[38;5;28;01mwith\u001B[39;00m OptionalXlaContext(\u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_jit_compile):\n\u001B[1;32m--> 833\u001B[0m   result \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_call\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43mkwds\u001B[49m\u001B[43m)\u001B[49m\n\u001B[0;32m    835\u001B[0m new_tracing_count \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mexperimental_get_tracing_count()\n\u001B[0;32m    836\u001B[0m without_tracing \u001B[38;5;241m=\u001B[39m (tracing_count \u001B[38;5;241m==\u001B[39m new_tracing_count)\n",
+      "File \u001B[1;32m~\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\tensorflow\\python\\eager\\polymorphic_function\\polymorphic_function.py:878\u001B[0m, in \u001B[0;36mFunction._call\u001B[1;34m(self, *args, **kwds)\u001B[0m\n\u001B[0;32m    875\u001B[0m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_lock\u001B[38;5;241m.\u001B[39mrelease()\n\u001B[0;32m    876\u001B[0m \u001B[38;5;66;03m# In this case we have not created variables on the first call. So we can\u001B[39;00m\n\u001B[0;32m    877\u001B[0m \u001B[38;5;66;03m# run the first trace but we should fail if variables are created.\u001B[39;00m\n\u001B[1;32m--> 878\u001B[0m results \u001B[38;5;241m=\u001B[39m \u001B[43mtracing_compilation\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mcall_function\u001B[49m\u001B[43m(\u001B[49m\n\u001B[0;32m    879\u001B[0m \u001B[43m    \u001B[49m\u001B[43margs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mkwds\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_variable_creation_config\u001B[49m\n\u001B[0;32m    880\u001B[0m \u001B[43m\u001B[49m\u001B[43m)\u001B[49m\n\u001B[0;32m    881\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_created_variables:\n\u001B[0;32m    882\u001B[0m   \u001B[38;5;28;01mraise\u001B[39;00m \u001B[38;5;167;01mValueError\u001B[39;00m(\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mCreating variables on a non-first call to a function\u001B[39m\u001B[38;5;124m\"\u001B[39m\n\u001B[0;32m    883\u001B[0m                    \u001B[38;5;124m\"\u001B[39m\u001B[38;5;124m decorated with tf.function.\u001B[39m\u001B[38;5;124m\"\u001B[39m)\n",
+      "File \u001B[1;32m~\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\tensorflow\\python\\eager\\polymorphic_function\\tracing_compilation.py:139\u001B[0m, in \u001B[0;36mcall_function\u001B[1;34m(args, kwargs, tracing_options)\u001B[0m\n\u001B[0;32m    137\u001B[0m bound_args \u001B[38;5;241m=\u001B[39m function\u001B[38;5;241m.\u001B[39mfunction_type\u001B[38;5;241m.\u001B[39mbind(\u001B[38;5;241m*\u001B[39margs, \u001B[38;5;241m*\u001B[39m\u001B[38;5;241m*\u001B[39mkwargs)\n\u001B[0;32m    138\u001B[0m flat_inputs \u001B[38;5;241m=\u001B[39m function\u001B[38;5;241m.\u001B[39mfunction_type\u001B[38;5;241m.\u001B[39munpack_inputs(bound_args)\n\u001B[1;32m--> 139\u001B[0m \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[43mfunction\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_call_flat\u001B[49m\u001B[43m(\u001B[49m\u001B[43m  \u001B[49m\u001B[38;5;66;43;03m# pylint: disable=protected-access\u001B[39;49;00m\n\u001B[0;32m    140\u001B[0m \u001B[43m    \u001B[49m\u001B[43mflat_inputs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mcaptured_inputs\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mfunction\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mcaptured_inputs\u001B[49m\n\u001B[0;32m    141\u001B[0m \u001B[43m\u001B[49m\u001B[43m)\u001B[49m\n",
+      "File \u001B[1;32m~\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\tensorflow\\python\\eager\\polymorphic_function\\concrete_function.py:1322\u001B[0m, in \u001B[0;36mConcreteFunction._call_flat\u001B[1;34m(self, tensor_inputs, captured_inputs)\u001B[0m\n\u001B[0;32m   1318\u001B[0m possible_gradient_type \u001B[38;5;241m=\u001B[39m gradients_util\u001B[38;5;241m.\u001B[39mPossibleTapeGradientTypes(args)\n\u001B[0;32m   1319\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m (possible_gradient_type \u001B[38;5;241m==\u001B[39m gradients_util\u001B[38;5;241m.\u001B[39mPOSSIBLE_GRADIENT_TYPES_NONE\n\u001B[0;32m   1320\u001B[0m     \u001B[38;5;129;01mand\u001B[39;00m executing_eagerly):\n\u001B[0;32m   1321\u001B[0m   \u001B[38;5;66;03m# No tape is watching; skip to running the function.\u001B[39;00m\n\u001B[1;32m-> 1322\u001B[0m   \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_inference_function\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mcall_preflattened\u001B[49m\u001B[43m(\u001B[49m\u001B[43margs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[0;32m   1323\u001B[0m forward_backward \u001B[38;5;241m=\u001B[39m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_select_forward_and_backward_functions(\n\u001B[0;32m   1324\u001B[0m     args,\n\u001B[0;32m   1325\u001B[0m     possible_gradient_type,\n\u001B[0;32m   1326\u001B[0m     executing_eagerly)\n\u001B[0;32m   1327\u001B[0m forward_function, args_with_tangents \u001B[38;5;241m=\u001B[39m forward_backward\u001B[38;5;241m.\u001B[39mforward()\n",
+      "File \u001B[1;32m~\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\tensorflow\\python\\eager\\polymorphic_function\\atomic_function.py:216\u001B[0m, in \u001B[0;36mAtomicFunction.call_preflattened\u001B[1;34m(self, args)\u001B[0m\n\u001B[0;32m    214\u001B[0m \u001B[38;5;28;01mdef\u001B[39;00m \u001B[38;5;21mcall_preflattened\u001B[39m(\u001B[38;5;28mself\u001B[39m, args: Sequence[core\u001B[38;5;241m.\u001B[39mTensor]) \u001B[38;5;241m-\u001B[39m\u001B[38;5;241m>\u001B[39m Any:\n\u001B[0;32m    215\u001B[0m \u001B[38;5;250m  \u001B[39m\u001B[38;5;124;03m\"\"\"Calls with flattened tensor inputs and returns the structured output.\"\"\"\u001B[39;00m\n\u001B[1;32m--> 216\u001B[0m   flat_outputs \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mcall_flat\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;241;43m*\u001B[39;49m\u001B[43margs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[0;32m    217\u001B[0m   \u001B[38;5;28;01mreturn\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39mfunction_type\u001B[38;5;241m.\u001B[39mpack_output(flat_outputs)\n",
+      "File \u001B[1;32m~\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\tensorflow\\python\\eager\\polymorphic_function\\atomic_function.py:251\u001B[0m, in \u001B[0;36mAtomicFunction.call_flat\u001B[1;34m(self, *args)\u001B[0m\n\u001B[0;32m    249\u001B[0m \u001B[38;5;28;01mwith\u001B[39;00m record\u001B[38;5;241m.\u001B[39mstop_recording():\n\u001B[0;32m    250\u001B[0m   \u001B[38;5;28;01mif\u001B[39;00m \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_bound_context\u001B[38;5;241m.\u001B[39mexecuting_eagerly():\n\u001B[1;32m--> 251\u001B[0m     outputs \u001B[38;5;241m=\u001B[39m \u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_bound_context\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mcall_function\u001B[49m\u001B[43m(\u001B[49m\n\u001B[0;32m    252\u001B[0m \u001B[43m        \u001B[49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mname\u001B[49m\u001B[43m,\u001B[49m\n\u001B[0;32m    253\u001B[0m \u001B[43m        \u001B[49m\u001B[38;5;28;43mlist\u001B[39;49m\u001B[43m(\u001B[49m\u001B[43margs\u001B[49m\u001B[43m)\u001B[49m\u001B[43m,\u001B[49m\n\u001B[0;32m    254\u001B[0m \u001B[43m        \u001B[49m\u001B[38;5;28;43mlen\u001B[39;49m\u001B[43m(\u001B[49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mfunction_type\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mflat_outputs\u001B[49m\u001B[43m)\u001B[49m\u001B[43m,\u001B[49m\n\u001B[0;32m    255\u001B[0m \u001B[43m    \u001B[49m\u001B[43m)\u001B[49m\n\u001B[0;32m    256\u001B[0m   \u001B[38;5;28;01melse\u001B[39;00m:\n\u001B[0;32m    257\u001B[0m     outputs \u001B[38;5;241m=\u001B[39m make_call_op_in_graph(\n\u001B[0;32m    258\u001B[0m         \u001B[38;5;28mself\u001B[39m,\n\u001B[0;32m    259\u001B[0m         \u001B[38;5;28mlist\u001B[39m(args),\n\u001B[0;32m    260\u001B[0m         \u001B[38;5;28mself\u001B[39m\u001B[38;5;241m.\u001B[39m_bound_context\u001B[38;5;241m.\u001B[39mfunction_call_options\u001B[38;5;241m.\u001B[39mas_attrs(),\n\u001B[0;32m    261\u001B[0m     )\n",
+      "File \u001B[1;32m~\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\tensorflow\\python\\eager\\context.py:1500\u001B[0m, in \u001B[0;36mContext.call_function\u001B[1;34m(self, name, tensor_inputs, num_outputs)\u001B[0m\n\u001B[0;32m   1498\u001B[0m cancellation_context \u001B[38;5;241m=\u001B[39m cancellation\u001B[38;5;241m.\u001B[39mcontext()\n\u001B[0;32m   1499\u001B[0m \u001B[38;5;28;01mif\u001B[39;00m cancellation_context \u001B[38;5;129;01mis\u001B[39;00m \u001B[38;5;28;01mNone\u001B[39;00m:\n\u001B[1;32m-> 1500\u001B[0m   outputs \u001B[38;5;241m=\u001B[39m \u001B[43mexecute\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mexecute\u001B[49m\u001B[43m(\u001B[49m\n\u001B[0;32m   1501\u001B[0m \u001B[43m      \u001B[49m\u001B[43mname\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mdecode\u001B[49m\u001B[43m(\u001B[49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[38;5;124;43mutf-8\u001B[39;49m\u001B[38;5;124;43m\"\u001B[39;49m\u001B[43m)\u001B[49m\u001B[43m,\u001B[49m\n\u001B[0;32m   1502\u001B[0m \u001B[43m      \u001B[49m\u001B[43mnum_outputs\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mnum_outputs\u001B[49m\u001B[43m,\u001B[49m\n\u001B[0;32m   1503\u001B[0m \u001B[43m      \u001B[49m\u001B[43minputs\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mtensor_inputs\u001B[49m\u001B[43m,\u001B[49m\n\u001B[0;32m   1504\u001B[0m \u001B[43m      \u001B[49m\u001B[43mattrs\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[43mattrs\u001B[49m\u001B[43m,\u001B[49m\n\u001B[0;32m   1505\u001B[0m \u001B[43m      \u001B[49m\u001B[43mctx\u001B[49m\u001B[38;5;241;43m=\u001B[39;49m\u001B[38;5;28;43mself\u001B[39;49m\u001B[43m,\u001B[49m\n\u001B[0;32m   1506\u001B[0m \u001B[43m  \u001B[49m\u001B[43m)\u001B[49m\n\u001B[0;32m   1507\u001B[0m \u001B[38;5;28;01melse\u001B[39;00m:\n\u001B[0;32m   1508\u001B[0m   outputs \u001B[38;5;241m=\u001B[39m execute\u001B[38;5;241m.\u001B[39mexecute_with_cancellation(\n\u001B[0;32m   1509\u001B[0m       name\u001B[38;5;241m.\u001B[39mdecode(\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mutf-8\u001B[39m\u001B[38;5;124m\"\u001B[39m),\n\u001B[0;32m   1510\u001B[0m       num_outputs\u001B[38;5;241m=\u001B[39mnum_outputs,\n\u001B[1;32m   (...)\u001B[0m\n\u001B[0;32m   1514\u001B[0m       cancellation_manager\u001B[38;5;241m=\u001B[39mcancellation_context,\n\u001B[0;32m   1515\u001B[0m   )\n",
+      "File \u001B[1;32m~\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\tensorflow\\python\\eager\\execute.py:53\u001B[0m, in \u001B[0;36mquick_execute\u001B[1;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001B[0m\n\u001B[0;32m     51\u001B[0m \u001B[38;5;28;01mtry\u001B[39;00m:\n\u001B[0;32m     52\u001B[0m   ctx\u001B[38;5;241m.\u001B[39mensure_initialized()\n\u001B[1;32m---> 53\u001B[0m   tensors \u001B[38;5;241m=\u001B[39m \u001B[43mpywrap_tfe\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43mTFE_Py_Execute\u001B[49m\u001B[43m(\u001B[49m\u001B[43mctx\u001B[49m\u001B[38;5;241;43m.\u001B[39;49m\u001B[43m_handle\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mdevice_name\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mop_name\u001B[49m\u001B[43m,\u001B[49m\n\u001B[0;32m     54\u001B[0m \u001B[43m                                      \u001B[49m\u001B[43minputs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mattrs\u001B[49m\u001B[43m,\u001B[49m\u001B[43m \u001B[49m\u001B[43mnum_outputs\u001B[49m\u001B[43m)\u001B[49m\n\u001B[0;32m     55\u001B[0m \u001B[38;5;28;01mexcept\u001B[39;00m core\u001B[38;5;241m.\u001B[39m_NotOkStatusException \u001B[38;5;28;01mas\u001B[39;00m e:\n\u001B[0;32m     56\u001B[0m   \u001B[38;5;28;01mif\u001B[39;00m name \u001B[38;5;129;01mis\u001B[39;00m \u001B[38;5;129;01mnot\u001B[39;00m \u001B[38;5;28;01mNone\u001B[39;00m:\n",
+      "\u001B[1;31mKeyboardInterrupt\u001B[0m: "
      ]
     }
    ],
-   "source": [
-    "history = model.fit(X_train, y_train, validation_data=(X_val, y_val), epochs=256, batch_size=1000,verbose=1)"
-   ],
-   "metadata": {
-    "collapsed": false,
-    "ExecuteTime": {
-     "end_time": "2024-05-08T14:41:26.487594Z",
-     "start_time": "2024-05-08T14:40:46.669964Z"
-    }
-   },
-   "id": "d9a29cb1ff2dcba7",
-   "execution_count": 212
+   "execution_count": 16
   },
   {
    "cell_type": "code",
-   "outputs": [],
    "source": [
     "%matplotlib inline\n",
     "plt.plot(history.history['loss'])\n",
@@ -215,11 +503,12 @@
    "metadata": {
     "collapsed": false,
     "ExecuteTime": {
-     "end_time": "2024-05-08T14:36:37.751023Z",
-     "start_time": "2024-05-08T14:36:37.750399Z"
+     "end_time": "2024-05-08T16:18:04.503593Z",
+     "start_time": "2024-05-08T16:18:04.502574Z"
     }
    },
    "id": "db97a7f3cc91e456",
+   "outputs": [],
    "execution_count": null
   },
   {
@@ -234,7 +523,6 @@
   },
   {
    "cell_type": "code",
-   "outputs": [],
    "source": [
     "prediction_word = \"español\"\n",
     "prediction_word = tokenizer.texts_to_sequences([prediction_word])\n",
@@ -253,24 +541,22 @@
    "metadata": {
     "collapsed": false,
     "ExecuteTime": {
-     "end_time": "2024-05-08T14:36:37.754197Z",
-     "start_time": "2024-05-08T14:36:37.752219Z"
+     "end_time": "2024-05-08T16:18:04.504569Z",
+     "start_time": "2024-05-08T16:18:04.504569Z"
     }
    },
    "id": "2af1ef5d86413ee6",
+   "outputs": [],
    "execution_count": null
   },
   {
    "cell_type": "code",
-   "outputs": [],
    "source": [],
    "metadata": {
-    "collapsed": false,
-    "ExecuteTime": {
-     "start_time": "2024-05-08T14:36:37.753803Z"
-    }
+    "collapsed": false
    },
    "id": "f103d5e7cc3146d9",
+   "outputs": [],
    "execution_count": null
   }
  ],
